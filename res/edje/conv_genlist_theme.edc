#include "macros.inl"
#include "colors_define.inl"
#define ENTRY_BUBBLE_TEXT_SIZE 30

#define BUBBLE_MSG_TYPE_PAD_WIDTH 8
#define BUBBLE_INFO_HEIGHT 88
#define BUBBLE_CONTENT_WIDTH_MAX 340
#define BUBBLE_CONTENT_PAD_TOP_HEIGHT 0
#define BUBBLE_CONTENT_PAD_BOTTOM_HEIGHT 0
#define BUBBLE_CONTENT_PAD_LEFT_WIDTH 0
#define BUBBLE_CONTENT_PAD_RIGHT_WIDTH 0
#define BUBBLE_PAD_BOTTOM_HEIGHT 17
#define BUBBLE_PAD_LEFT_WIDTH 32
#define BUBBLE_PAD_RIGHT_WIDTH 32
#define BUBBLE_PAD_CHECK_WIDTH 32
#define BUBBLE_CHECK_WIDTH 50
#define BUBBLE_CHECK_HEIGHT 50
#define BUBBLE_INFO_THUMB_HEIGHT 80
#define BUBBLE_INFO_THUMB_WIDTH 80
#define BUBBLE_INFO_THUMB_PAD_WIDTH 13
#define BUBBLE_INFO_PAD_TOP_HEIGHT 9
#define BUBBLE_INFO_STATUS_HEIGHT 44
#define BUBBLE_INFO_STATUS_WIDTH 44
#define BUBBLE_INFO_STATUS_PAD_WIDTH 4
#define BUBBLE_INFO_TEXT_HEIGHT 38
#define BUBBLE_DRAFT_PAD_WIDTH 74
#define BUBBLE_DRAFT_BUTTON_PAD_WIDTH 26
#define BUBBLE_DRAFT_BUTTON_PAD_HEIGHT 7
#define BUBBLE_DRAFT_BUTTON_WIDTH 56
#define BUBBLE_DRAFT_BUTTON_HEIGHT 56
#define BUBBLE_FAILED_BUTTON_WIDTH 56
#define BUBBLE_FAILED_BUTTON_HEIGHT 56

#define BUBBLE_BG_COLOR 90 111 199 64

#define DATELINE_TEXT_SIZE 28
#define DATELINE_TOP_PADDING 16
#define DATELINE_BOTTOM_PADDING 12
#define DATELINE_SIDE_PADDING 32
#define DATELINE_CENTER_PADDING 12
#define DATELINE_HEIGHT 66
#define DIVIDER_TOP_PADDING 20
#define DIVIDER_BOTTOM_PADDING 16
#define DIVIDER_HEIGHT 2

collections {

    BASE_SCALE;

images {
    image: "messages_date_divider.#.png" RAW;
}

styles {
    style {
        name: "entry_bubble_sent_textblock_style";
        base: "font=Tizen:style=Roman font_size="ENTRY_BUBBLE_TEXT_SIZE" color=#000000 left_margin=1 right_margin=2 wrap=mixed align=right";
        tag:  "tab" "\t";
        tag:  "em" "+ font=Tizen:style=Oblique";
        tag:  "b" "+ font=Tizen:style=Bold";
        tag:  "link" "+ color=#800 underline=on underline_color=#8008";
        tag:  "hilight" "+ font=Tizen:style=Bold";
        tag:  "match" "+ color=#FFFFFF color_class=T1067";
    }
    style {
        name: "entry_bubble_receive_textblock_style";
        base: "font=Tizen:style=Roman font_size="ENTRY_BUBBLE_TEXT_SIZE" color=#000000  left_margin=1 right_margin=2 wrap=mixed";
        tag:  "tab" "\t";
        tag:  "em" "+ font=Tizen:style=Oblique";
        tag:  "b" "+ font=Tizen:style=Bold";
        tag:  "link" "+ color=#800 underline=on underline_color=#8008";
        tag:  "hilight" "+ font=Tizen:style=Bold";
        tag:  "match" "+ color=#FFFFFF color_class=T1067";
    }
    style {
        name: "entry_textblock_disabled_style";
        base: "font=Tizen:style=Roman font_size="ENTRY_BUBBLE_TEXT_SIZE" color=#00000080 left_margin=1 right_margin=2 wrap=mixed text_class=bubble";
        tag:  "tab" "\t";
        tag:  "em" "+ font=Tizen:style=Oblique";
        tag:  "b" "+ font=Tizen:style=Bold";
        tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
        tag:  "hilight" "+ font=Tizen:style=Bold";
        tag:  "match" "+ color=#FFFFFF color_class=T1067";
    }
    style {
        name: "dateline_textblock_style";
        base: "font=Tizen:style=Roman font_size="DATELINE_TEXT_SIZE" color=#"BUBBLE_DATELINE_TEXTSTYLE_COLOR_HEX" align=center";
    }
}

group { name: "elm/genlist/item/sentbubble/default";
    alias: "elm/genlist/item_compress/sentbubble/default";

    data.item: "banded_bg_area" "elm.swallow.bg";
    data.item: "texts" "info.time msg.type";
    data.item: "contents" "bubble.content info.status info.status1 bubble.check";
    parts{
        spacer { "base"; scale; mouse;
            desc { "default";
                rel1.to_y: "info.pad";
                rel2.to_y: "pad.bottom";
                align: 0.0 0.0;
            }
        }
        swallow { "elm.swallow.bg"; scale;
            desc { "default";
            }
        }
        spacer { "info.pad"; scale;
            desc { "default";
                min: 0 BUBBLE_INFO_HEIGHT;
                max: -1 BUBBLE_INFO_HEIGHT;
                rel1.to_x: "pad.left";
                rel1.relative: 1.0 0.0;
                rel2.to_x: "pad.right";
                rel2.relative: 0.0 1.0;
                align: 0.0 0.0;
                fixed: 0 1;
            }
        }
        spacer { "info.pad.top"; scale;
            desc { "default"
                min: 0 BUBBLE_INFO_PAD_TOP_HEIGHT;
                max: -1 BUBBLE_INFO_PAD_TOP_HEIGHT;
                align: 0.0 0.0;
                rel1.to: "info.pad";
                fixed: 0 1;
            }
        }
        swallow { "info.status"; scale;
            desc { "default";
                min: BUBBLE_INFO_STATUS_WIDTH BUBBLE_INFO_STATUS_HEIGHT;
                max: BUBBLE_INFO_STATUS_WIDTH BUBBLE_INFO_STATUS_HEIGHT;
                align: 1.0 0.0;
                rel1.to_y: "info.pad.top";
                rel1.relative: 0.0 1.0;
                rel2.to_x: "info.pad";
                rel2.relative: 0.0 1.0;
                fixed: 1 1;
            }
        }
        spacer { "info.status.pad"; scale;
            desc { "default"
                min: BUBBLE_INFO_STATUS_PAD_WIDTH 0;
                max: BUBBLE_INFO_STATUS_PAD_WIDTH -1;
                align: 1.0 0.0;
                rel2.to_x: "info.status";
                rel2.relative: 0.0 1.0;
                fixed: 1 0;
            }
        }
        swallow { "info.status1"; scale;
            desc { "default";
                min: BUBBLE_INFO_STATUS_WIDTH BUBBLE_INFO_STATUS_HEIGHT;
                max: BUBBLE_INFO_STATUS_WIDTH BUBBLE_INFO_STATUS_HEIGHT;
                align: 1.0 0.0;
                rel1.to_y: "info.pad.top";
                rel1.relative: 0.0 1.0;
                rel2.to_x: "info.status.pad";
                rel2.relative: 0.0 1.0;
                fixed: 1 1;
            }
        }
        textblock { "msg.type"; scale;
            desc { "default";
                align: 1.0 0.0;
                rel1.to_x: "bubble.pad.right";
                rel2.to_x: "bubble.pad.right";
                rel1.to_y: "info.status";
                rel2.to_y: "info.status";
                rel1.relative: 1.0 1.0;
                rel2.relative: 1.0 1.0;
                text{
                    style: "entry_bubble_sent_textblock_style";
                    min: 1 1;
                    ellipsis: -1;
                    text: "SMS";
                }
            }
        }
        spacer { "msg.type.pad"; scale;
            desc { "default"
                min: BUBBLE_MSG_TYPE_PAD_WIDTH 0;
                max: BUBBLE_MSG_TYPE_PAD_WIDTH -1;
                align: 1.0 0.0;
                rel1.to_x: "msg.type";
                rel2.to_x: "msg.type";
                rel1.relative: 0.0 0.0;
                rel2.relative: 0.0 1.0;
                fixed: 1 1;
            }
        }
        textblock { "info.time"; scale;
            desc { "default";
                align: 1.0 0.0;
                rel1.to_x: "msg.type.pad";
                rel2.to_x: "msg.type.pad";
                rel1.to_y: "info.status";
                rel2.to_y: "info.status";
                rel1.relative: 0.0 1.0;
                rel2.relative: 0.0 1.0;
                text{
                    style: "entry_bubble_sent_textblock_style";
                    min: 1 1;
                    ellipsis: -1;
                }
            }
        }
        spacer { "pad.left"; scale;
            desc { "default";
                min: BUBBLE_PAD_LEFT_WIDTH 0;
                rel2.to_x: "bubble.pad.left";
                rel2.relative: 0.0 0.0;
                align: 0.0 0.0;
            }
        }
        spacer { "pad.right"; scale;
            desc { "default";
                min: BUBBLE_PAD_RIGHT_WIDTH 0;
                max: BUBBLE_PAD_RIGHT_WIDTH -1;
                align: 1.0 0.0;
                rel2.to_x: "bubble.check";
                rel2.relative: 0.0 1.0;
                fixed: 1 0;
            }
        }
        spacer { "pad.check"; scale;
            desc { "default";
                min: 0 0;
                max: 0 -1;
                align: 1.0 0.0;
                fixed: 1 0;
            }
            desc { "selection";
                inherit: "default";
                min: BUBBLE_PAD_CHECK_WIDTH 0;
                max: BUBBLE_PAD_CHECK_WIDTH -1;
            }
        }
        swallow { "bubble.check"; scale;
            desc { "default";
                min: 0 BUBBLE_CHECK_HEIGHT;
                max: 0 BUBBLE_CHECK_HEIGHT;
                align: 1.0 0.5;
                rel1.to_y: "bubble.bg.image";
                rel2.to_x: "pad.check";
                rel2.to_y: "bubble.bg.image";
                rel2.relative: 0.0 1.0;
            }
            desc { "selection";
                inherit: "default";
                min: BUBBLE_CHECK_WIDTH BUBBLE_CHECK_HEIGHT;
                max: BUBBLE_CHECK_WIDTH BUBBLE_CHECK_HEIGHT;
            }
        }
        rect { "bubble.bg.image"; scale;
            desc { "default";
                visible: 0;
                rel1.to_x: "bubble.pad.left";
                rel1.to_y: "bubble.pad.top";
                rel2.to_x: "bubble.pad.right";
                rel2.to_y: "bubble.pad.bottom";
                color: BUBBLE_BG_COLOR;
            }
        }
        spacer { "bubble.pad.top"; scale;
            desc { "default";
                min: 0 BUBBLE_CONTENT_PAD_TOP_HEIGHT;
                max: -1 BUBBLE_CONTENT_PAD_TOP_HEIGHT;
                rel1.to_y: "info.pad";
                rel1.relative: 0.0 1.0;
                align: 0.0 0.0;
                fixed: 0 1;
            }
        }
        spacer { "bubble.pad.left"; scale;
            desc { "default";
                min: BUBBLE_CONTENT_PAD_LEFT_WIDTH 0;
                max: BUBBLE_CONTENT_PAD_LEFT_WIDTH -1;
                rel2.to_x: "bubble.content";
                rel2.relative: 0.0 1.0;
                align: 1.0 0.0;
                fixed: 1 0;
            }
        }
        swallow { "bubble.content"; scale;
            desc { "default";
                max: BUBBLE_CONTENT_WIDTH_MAX -1;
                rel1.to_y: "bubble.pad.top";
                rel1.relative: 1.0 1.0;
                rel2.to_x: "bubble.pad.right";
                rel2.to_y: "bubble.pad.bottom";
                rel2.relative: 0.0 0.0;
                align: 1.0 0.0;
                fixed: 1 0;
            }
        }
        rect { "bubble.content_event_blocker"; scale;
            desc { "default";
                rel1.to: "bubble.content";
                rel2.to: "bubble.content";
                color: 0 0 0 0;
                max: 0 0;
            }
            desc { "selection";
                inherit: "default";
                max: -1 -1;
            }
        }
        spacer { "bubble.pad.right"; scale;
            desc { "default";
                min: BUBBLE_CONTENT_PAD_RIGHT_WIDTH 0;
                max: BUBBLE_CONTENT_PAD_RIGHT_WIDTH -1;
                rel2.to_x: "pad.right";
                rel2.relative: 0.0 0.0;
                align: 1.0 0.0;
                fixed: 1 0;
            }
        }
        spacer { "bubble.pad.bottom"; scale;
            desc { "default";
                min: 0 BUBBLE_CONTENT_PAD_BOTTOM_HEIGHT;
                max: -1 BUBBLE_CONTENT_PAD_BOTTOM_HEIGHT;
                rel2.to_y: "pad.bottom";
                rel2.relative: 1.0 0.0;
                align: 0.0 1.0;
                fixed: 0 1;
            }
        }
        spacer { "pad.bottom"; scale;
            desc { "default";
                min: 0 BUBBLE_PAD_BOTTOM_HEIGHT;
                max: -1 BUBBLE_PAD_BOTTOM_HEIGHT;
                rel1.relative: 0.0 1.0;
                align: 0.0 1.0;
                fixed: 0 1;
            }
        }
    }
    programs{
        program { name: "pressed";
            signal: "elm,state,selected";
            source: "elm";
            action: STATE_SET "pressed" 0.0;
            target: "bubble.bg.image";
        }
        program { name: "unpressed";
            signal: "elm,state,unselected";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "bubble.bg.image";
        }
        program { name: "selection_mode";
            signal: "elm,state,bubble.check,visible";
            source: "elm";
            action: STATE_SET "selection" 0.0;
            target: "bubble.check";
            target: "pad.check";
            target: "bubble.content_event_blocker";
        }
        program { name: "default_mode";
            signal: "elm,state,default";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "bubble.check";
            target: "pad.check";
            target: "bubble.content_event_blocker";
        }
    }
}

group { name: "elm/genlist/item/draft/default";
    alias: "elm/genlist/item_compress/draft/default";
    inherit: "elm/genlist/item/sentbubble/default";

    data.item: "contents" "bubble.content info.status info.status1 bubble.check draft.button";

    parts {
        spacer { "bubble.pad.right"; scale;
            desc { "default";
                rel2.to_x: "draft.pad";
            }
        }
        spacer { "draft.pad"; scale;
            desc { "default";
                min: BUBBLE_DRAFT_PAD_WIDTH 50;
                max: BUBBLE_DRAFT_PAD_WIDTH 50;
                rel2.to_x: "pad.right";
                rel2.relative: 0.0 0.0;
                align: 1.0 0.0;
                fixed: 1 0;
            }
        }
        spacer { "draft.pad.button"; scale;
            desc { "default";
                min: BUBBLE_DRAFT_BUTTON_PAD_WIDTH BUBBLE_DRAFT_BUTTON_PAD_HEIGHT;
                max: BUBBLE_DRAFT_BUTTON_PAD_WIDTH BUBBLE_DRAFT_BUTTON_PAD_HEIGHT;
                rel1.to_x: "draft.pad";
                rel1.to_y: "bubble.pad.top";
                fixed: 1 1;
                align: 0.0 0.0;
            }
        }
        swallow { "draft.button"; scale;
            desc { "default";
                min: BUBBLE_DRAFT_BUTTON_WIDTH BUBBLE_DRAFT_BUTTON_HEIGHT;
                max: BUBBLE_DRAFT_BUTTON_WIDTH BUBBLE_DRAFT_BUTTON_HEIGHT;
                rel1.to: "draft.pad.button";
                rel1.relative: 1.0 1.0;
                align: 0.0 0.0;
            }
        }
    }
}

group { name: "elm/genlist/item/failed/default";
    alias: "elm/genlist/item_compress/failed/default";
    inherit: "elm/genlist/item/draft/default";
    part_remove: "draft.button";
    data.item: "contents" "bubble.content info.status info.status1 bubble.check failed.button";

    parts {
        swallow { "failed.button"; scale;
            desc { "default";
                min: BUBBLE_FAILED_BUTTON_WIDTH BUBBLE_FAILED_BUTTON_HEIGHT;
                max: BUBBLE_FAILED_BUTTON_WIDTH BUBBLE_FAILED_BUTTON_HEIGHT;
                rel1.to: "draft.pad.button";
                rel1.relative: 1.0 1.0;
                align: 0.0 0.0;
            }
        }
    }
}

group { name: "elm/genlist/item/receivebubble/default";
    alias: "elm/genlist/item_compress/receivebubble/default";
    inherit: "elm/genlist/item/sentbubble/default";
    data.item: "contents" "bubble.content info.thumbnail info.status info.status1 bubble.check";

    parts {
        swallow { "info.thumbnail"; scale;
            desc { "default";
                min: BUBBLE_INFO_THUMB_WIDTH BUBBLE_INFO_THUMB_HEIGHT;
                max: BUBBLE_INFO_THUMB_WIDTH BUBBLE_INFO_THUMB_HEIGHT;
                align: 0.0 0.0;
                rel1.to: "info.pad";
                rel2.to: "";
                fixed: 1 1;
            }
        }
        spacer { "info.thumb.pad"; scale;
            desc { "default"
                min: BUBBLE_INFO_THUMB_PAD_WIDTH 0;
                max: BUBBLE_INFO_THUMB_PAD_WIDTH -1;
                align: 0.0 0.0;
                rel1.to_x: "info.thumbnail";
                rel1.relative: 1.0 0.0;
                rel2.to: "";
                fixed: 1 0;
            }
        }
        swallow { "info.status"; scale;
            desc { "default";
                align: 0.0 0.0;
                rel1.to_y: "info.pad.top";
                rel1.to_x: "info.thumb.pad";
                rel1.relative: 1.0 1.0;
                rel2.to: "";
            }
        }
        spacer { "info.status.pad"; scale;
            desc { "default"
                align: 0.0 0.0;
                rel1.to_x: "info.status";
                rel1.relative: 1.0 0.0;
                rel2.to: "";
            }
        }
        swallow { "info.status1"; scale;
            desc { "default";
                align: 0.0 0.0;
                rel1.to_y: "info.pad.top";
                rel1.to_x: "info.status.pad";
                rel1.relative: 1.0 1.0;
                rel2.to: "";
            }
        }
        textblock { "info.time"; scale;
            desc { "default";
                align: 0.0 0.0;
                rel1.to_x: "info.thumb.pad";
                rel1.relative: 1.0 1.0;
                rel2.to_x: "info.thumb.pad";
                rel2.relative: 1.0 1.0;
                text.style: "entry_bubble_receive_textblock_style";
            }
        }
        spacer { "msg.type.pad"; scale;
            desc { "default"
                min: BUBBLE_MSG_TYPE_PAD_WIDTH 0;
                max: BUBBLE_MSG_TYPE_PAD_WIDTH -1;
                align: 0.0 0.0;
                rel1.to_x: "info.time";
                rel2.to_x: "info.time";
                rel1.relative: 1.0 0.0;
                rel2.relative: 1.0 1.0;
                fixed: 1 1;
            }
        }
        textblock { "msg.type"; scale;
            desc { "default";
                align: 0.0 0.0;
                rel1.to_x: "msg.type.pad";
                rel2.to_x: "msg.type.pad";
                rel1.to_y: "info.time";
                rel2.to_y: "info.time";
                rel1.relative: 1.0 0.0;
                rel2.relative: 1.0 1.0;
                text.style: "entry_bubble_receive_textblock_style";
            }
        }
        spacer { "pad.left"; scale;
            desc { "default";
                max: BUBBLE_PAD_LEFT_WIDTH -1;
                rel2.to: "";
                align: 0.0 0.0;
                fixed: 1 0;
            }
        }
        spacer { "pad.right"; scale;
            desc { "default";
                max: -1 -1;
                rel1.to_x: "bubble.pad.right";
                rel1.relative: 1.0 0.0;
            }
        }
        spacer { "bubble.pad.left"; scale;
            desc { "default";
                rel1.to_x: "pad.left";
                rel1.relative: 1.0 0.0;
                rel2.to: "";
                align: 0.0 0.0;
            }
        }
        swallow { "bubble.content"; scale;
            desc { "default";
                rel1.relative: 1.0 1.0;
                rel1.to_x: "bubble.pad.left";
                rel2.relative: 0.0 0.0;
                rel2.to_x: "";
                align: 0.0 0.0;
            }
        }
        spacer { "bubble.pad.right"; scale;
            desc { "default";
                rel1.to_x: "bubble.content";
                rel1.relative: 1.0 0.0;
                rel2.to: "";
                align: 0.0 0.0;
            }
        }
    }
}

group {
    name: "elm/genlist/item/dateline/default";
    alias: "elm/genlist/item_compress/dateline/default";

    data.item: "banded_bg_area" "elm.swallow.bg";
    data.item: "texts" "text.date";

    parts{
        spacer { "base"; scale; nomouse;
            desc { "default";
                align: 0.5 0.5;
                min: 0 DATELINE_HEIGHT;
                max: -1 DATELINE_HEIGHT;
                rel1.relative: 0.0 0.0;
                rel2.relative: 1.0 1.0;
                fixed: 0 1;
            }
        }
        swallow { "elm.swallow.bg"; scale; nomouse;
            desc { "default";
            }
        }
        spacer { "pad.top"; scale; nomouse;
            desc { "default";
                align: 0.5 0.0;
                min: 0 DATELINE_TOP_PADDING;
                max: -1 DATELINE_TOP_PADDING;
                rel1.to: "base";
                fixed: 0 1;
            }
        }
        spacer { "pad.bottom"; scale; nomouse;
            desc { "default";
                align: 0.5 1.0;
                min: 0 DATELINE_BOTTOM_PADDING;
                max: -1 DATELINE_BOTTOM_PADDING;
                rel2.to: "base";
                fixed: 0 1;
            }
        }
        textblock { "text.date"; scale; nomouse;
            desc { "default";
                align: 0.5 0.5;
                rel1.to_x: "base";
                rel1.to_y: "pad.top";
                rel1.relative: 0.0 1.0;
                rel2.to_x: "base";
                rel2.to_y: "pad.bottom";
                rel2.relative: 1.0 0.0;
                text.style: "dateline_textblock_style";
                text.max: 1 0;
                fixed: 0 1;
            }
        }
        spacer { "pad.left"; scale; nomouse;
            desc { "default";
                align: 0.0 0.5;
                min: DATELINE_SIDE_PADDING 0;
                max: DATELINE_SIDE_PADDING -1;
                rel1.to: "base";
                fixed: 1 0;
            }
        }
        spacer { "pad.right"; scale; nomouse;
            desc { "default";
                align: 1.0 0.5;
                min: DATELINE_SIDE_PADDING 0;
                max: DATELINE_SIDE_PADDING -1;
                rel2.to: "base";
                fixed: 1 0;
            }
        }
        spacer { "pad.left.center"; scale; nomouse;
            desc { "default";
                align: 1.0 0.5;
                min: DATELINE_CENTER_PADDING 0;
                max: DATELINE_CENTER_PADDING -1;
                rel2.to: "text.date";
                rel2.relative: 0.0 1.0;
                fixed: 1 0;
            }
        }
        spacer { "pad.right.center"; scale; nomouse;
            desc { "default";
                align: 0.0 0.5;
                min: DATELINE_CENTER_PADDING 0;
                max: DATELINE_CENTER_PADDING -1;
                rel1.to: "text.date";
                rel1.relative: 1.0 0.0;
                fixed: 1 0;
            }
        }
        spacer { "pad.top.divider"; scale; nomouse;
            desc { "default";
                align: 0.5 0.0;
                min: 0 DIVIDER_TOP_PADDING;
                max: -1 DIVIDER_TOP_PADDING;
                rel1.to: "pad.top";
                rel1.relative: 0.0 1.0;
                fixed: 0 1;
            }
        }
        image { "dateline.left"; scale; nomouse;
            description { "default";
                align: 0.0 0.0;
                min: 0 DIVIDER_HEIGHT;
                max: -1 DIVIDER_HEIGHT;
                rel1.to_x: "pad.left";
                rel1.to_y: "pad.top.divider";
                rel1.relative: 1.0 1.0;
                rel2.to_x: "pad.left.center";
                rel2.relative: 0.0 1.0;
                color: BUBBLE_DATELINE_DIVIDER_COLOR_EDC;
                image.normal: "messages_date_divider.#.png";
                fixed: 0 1;
            }
        }
        image { "dateline.right"; scale; nomouse;
            desc { "default";
                align: 1.0 0.0;
                min: 0 DIVIDER_HEIGHT;
                max: -1 DIVIDER_HEIGHT;
                rel1.to_x: "pad.right.center";
                rel1.to_y: "pad.top.divider";
                rel1.relative: 1.0 1.0;
                rel2.to_x: "pad.right";
                rel2.relative: 0.0 1.0;
                color: BUBBLE_DATELINE_DIVIDER_COLOR_EDC;
                image.normal: "messages_date_divider.#.png";
                fixed: 0 1;
            }
        }
    }
}

}