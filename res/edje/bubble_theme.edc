#define COLOR_BLACK 			0 0 0 255
#define COLOR_BLACK_TRANSPARENT 0 0 0 204
#define COLOR_WHITE				255 255 255 255
#define COLOR_GRAY				245 245 242 255
#define COLOR_DARK_GRAY			213 213 212 255
#define COLOR_BLUE 				2 61 132 255
#define COLOR_DARK_BLUE			1 37 79 255
#define COLOR_BLUE_TRANSPARENT	179 197 218 255
#define COLOR_RED				224 33 33 255

#define ENTRY_TEXTBLOCK_MIN_WIDTH 135
#define ENTRY_SELECTION_BG_COLOR 90 123 138 127
#define ENTRY_BUBBLE_EX_PAD 58
#define ENTRY_BUBBLE_EX_CALLERID_PAD 178
#define ENTRY_BUBBLE_IX_PAD 20
#define ENTRY_BUBBLE_Y_PAD 15
#define ENTRY_BUBBLE_BOTTOM_PAD 15
#define ENTRY_BUBBLE_CALLERID_PAD 115
#define ENTRY_BUBBLE_CALLERID_ICON_PAD 16
#define ENTRY_BUBBLE_CALLERID_WIDTH 99
#define ENTRY_BUBBLE_CALLERID_HEIGHT 99
#define ENTRY_BUBBLE_GROUPCHAT_PAD 42
#define ENTRY_BUBBLE_GROUPCHAT_TEXT_PAD 38
#define ENTRY_BUBBLE_STATUS_PAD 55
#define ENTRY_SELECTION_BG_COLOR 90 123 138 127
//#define ENTRY_BUBBLE_SENT_TEXT_COLOR "T0217"
#define ENTRY_BUBBLE_SENT_TEXT_COLOR COLOR_BLACK
#define ENTRY_BUBBLE_SENT_TEXT_SHADOW_STYLE "shadow,bottom"
#define ENTRY_BUBBLE_SENT_TEXT_SHADOW_COLOR "#ffffff7f"
//#define ENTRY_BUBBLE_RECEV_TEXT_COLOR "T0217"
#define ENTRY_BUBBLE_RECEV_TEXT_COLOR COLOR_BLACK
#define ENTRY_BUBBLE_RECEV_TEXT_SHADOW_STYLE "shadow,bottom"
#define ENTRY_BUBBLE_RECEV_TEXT_SHADOW_COLOR "#ffffff7f"
#define ENTRY_BUBBLE_TEXT_SIZE 30

#define RECV_BUBBLE_STYLE_01_BORDER 55 24 55 15
#define RECV_BUBBLE_STYLE_02_BORDER 55 24 55 15
#define RECV_BUBBLE_STYLE_03_BORDER 40 39 31 39
#define RECV_BUBBLE_STYLE_04_BORDER 82 46 44 26
#define RECV_BUBBLE_STYLE_05_BORDER 111 17 78 30

#define SENT_BUBBLE_STYLE_01_BORDER 24 55 55 15
#define SENT_BUBBLE_STYLE_02_BORDER 24 55 55 15
#define SENT_BUBBLE_STYLE_03_BORDER 40 39 31 39
#define SENT_BUBBLE_STYLE_04_BORDER 46 82 44 26
#define SENT_BUBBLE_STYLE_05_BORDER 17 111 78 30

#define GENLIST_ITEM_1LINE_HEIGHT_INC                      120
#define GENLIST_ITEM_2LINE_HEIGHT_INC                      144
#define GENLIST_ITEM_LR_PADDING_INC                        32
#define GENLIST_ITEM_TOP_PADDING_INC                       23
#define GENLIST_ITEM_BOTTOM_PADDING_INC                    24 // including bottom line
#define GENLIST_ITEM_TYPE_BA_PADDING_INC                   32
#define GENLIST_ITEM_TYPE_DC_PADDING_INC                   32
#define GENLIST_ITEM_TYPE_AD_PADDING_INC                   32
#define GENLIST_ITEM_MAIN_LINE_HEIGHT_INC                  54
#define GENLIST_ITEM_MAIN_LINE_ICON_TEXT_PADDING_INC       12
#define GENLIST_ITEM_MAIN_LINE_TEXT_END_PADDING_INC        32
#define GENLIST_ITEM_SUB_LINE_HEIGHT_INC                   43
#define GENLIST_ITEM_SUB_LINE_TEXT_END_PADDING_INC         32
#define GENLIST_ITEM_END_TEXT_WIDTH_INC                    121
#define GENLIST_ITEM_GROUP_INDEX_HEIGHT_INC                64
#define GENLIST_ITEM_GROUP_INDEX_TOP_PADDING_INC           10
#define GENLIST_ITEM_GROUP_INDEX_BOTTOM_PADDING_INC        11
#define GENLIST_ITEM_GROUP_INDEX_RIGHT_PADDING_INC         17
#define GENLIST_ITEM_GROUP_INDEX_END_TEXT_WIDTH_INC        218
#define GENLIST_ITEM_GROUP_INDEX_EXPAND_TOP_PADDING_INC    12
#define GENLIST_ITEM_GROUP_INDEX_EXPAND_BOTTOM_PADDING_INC 12
#define GENLIST_ITEM_GROUP_INDEX_EXPAND_ICON_SIZE_INC      64 64
#define GENLIST_ITEM_MULTILINE_1LINE_HEIGHT_INC            120

collections {

    base_scale: 2.6;

images {
	image: "messagebubble_bg_receive_bg.#.png" COMP;
	image: "messagebubble_bg_receive_bg_ef.#.png" COMP;
	image: "bubble_with_search_result_receive.#.png" COMP;
	image: "messagebubble_bg_send_bg.#.png" COMP;
	image: "messagebubble_bg_send_bg_ef.#.png" COMP;
	image: "bubble_with_search_result_send.#.png" COMP;
	image: "badge_bg_draft.png" COMP;
	image: "messages_bubble_bg.#.png" COMP;
	image: "messages_bubble_bg_ef.#.png" COMP;
	image: "messages_bubble_line_draft.#.png" COMP;
}

group {
	name: "elm/entry/selection/default";
	parts {
		part { name: "bg";
			type: RECT;
			scale: 1;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: ENTRY_SELECTION_BG_COLOR;
			}
		}
	}
}

group {
	name: "elm/entry/anchor/default";
	parts {
		part { name: "bg";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 0 0 0 0;
			}
		}
	}
}

styles {
	style {
		name: "entry_bubble_sent_textblock_style";
		base: "font=Tizen:style=Roman font_size="ENTRY_BUBBLE_TEXT_SIZE" color=#000000 left_margin=1 right_margin=2 wrap=mixed align=right";
		tag:  "tab" "\t";
		tag:  "em" "+ font=Tizen:style=Oblique";
		tag:  "b" "+ font=Tizen:style=Bold";
		tag:  "link" "+ color=#800 underline=on underline_color=#8008";
		tag:  "hilight" "+ font=Tizen:style=Bold";
		tag:  "match" "+ color=#FFFFFF color_class=T1067";
	}
	style {
		name: "entry_bubble_receive_textblock_style";
		base: "font=Tizen:style=Roman font_size="ENTRY_BUBBLE_TEXT_SIZE" color=#000000  left_margin=1 right_margin=2 wrap=mixed";
		tag:  "tab" "\t";
		tag:  "em" "+ font=Tizen:style=Oblique";
		tag:  "b" "+ font=Tizen:style=Bold";
		tag:  "link" "+ color=#800 underline=on underline_color=#8008";
		tag:  "hilight" "+ font=Tizen:style=Bold";
		tag:  "match" "+ color=#FFFFFF color_class=T1067";
	}
	style {
		name: "entry_textblock_disabled_style";
		base: "font=Tizen:style=Roman font_size="ENTRY_BUBBLE_TEXT_SIZE" color=#00000080 left_margin=1 right_margin=2 wrap=mixed text_class=bubble";
		tag:  "tab" "\t";
		tag:  "em" "+ font=Tizen:style=Oblique";
		tag:  "b" "+ font=Tizen:style=Bold";
		tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
		tag:  "hilight" "+ font=Tizen:style=Bold";
		tag:  "match" "+ color=#FFFFFF color_class=T1067";
	}
}

/* Entry's bubble style */
#define BUBBLE_RECV_MESSAGE_STYLE(style_name, bubble_image, focus_image, ef_image, nc_r, nc_g, nc_b, nc_a, press_color, left_pad, right_pad, top_pad) \
group { \
	name:  "elm/label/base/readmessage/custom/"style_name; \
	script { \
		public anchor_down = 0; \
	} \
	data { \
		item: "focus_highlight" "on"; \
	} \
	parts { \
		part { \
			name: "base"; \
			type: RECT; \
			mouse_events: 1; \
			description { \
				state: "default" 0.0; \
				color: 255 255 255 0; \
			} \
		} \
		part { \
			name: "elm.bubble.left.pad"; \
			type: SPACER; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1.relative: 0.0 0.0; \
				rel2.relative: 0.0 1.0; \
				align: 0.0 0.0; \
				min: 7 0; \
				max: 7 0; \
				fixed: 1 1; \
			} \
			description { \
				state: "selectview" 0.0; \
				inherit: "default" 0.0; \
				min: 7 0; \
			} \
		} \
		part { \
			name: "elm.bubble.callerid.rect"; \
			type: RECT; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 {to: "elm.bubble.left.pad"; relative: 1.0 0.0; } \
				rel2 {to: "elm.bubble.left.pad"; relative: 1.0 1.0; } \
				align: 0.0 0.0; \
				min: 0 0; \
				fixed: 1 1; \
				visible: 0; \
			} \
			description { \
				state: "callerid_on" 0.0; \
				inherit: "default" 0.0; \
				min: ENTRY_BUBBLE_CALLERID_PAD 0; \
			} \
		} \
		part { \
			name: "elm.callerid.icon.pad"; \
			type: SPACER; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 {to: "elm.bubble.left.pad"; relative: 1.0 0.0; } \
				rel2 {to: "elm.bubble.left.pad"; relative: 1.0 1.0; } \
				align: 0.0 0.0; \
				min: ENTRY_BUBBLE_CALLERID_ICON_PAD 0; \
				fixed: 1 1; \
			} \
		} \
		part { \
			name: "elm.swallow.callerid"; \
			type: SWALLOW; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				fixed: 1 1; \
				align: 0.0 0.0; \
				min: 0 0; \
				max: 0 0; \
				rel1 { to: "elm.callerid.icon.pad"; relative: 1.0 0.0; } \
				rel2 { to: "elm.callerid.icon.pad"; relative: 1.0 0.0; } \
				visible: 0; \
			} \
			description { \
				state: "callerid_on" 0.0; \
				inherit: "default" 0.0; \
				min: ENTRY_BUBBLE_CALLERID_WIDTH ENTRY_BUBBLE_CALLERID_HEIGHT; \
				max: ENTRY_BUBBLE_CALLERID_WIDTH ENTRY_BUBBLE_CALLERID_HEIGHT; \
				visible: 1; \
			} \
		} \
		part { \
			name: "elm.callerid.bottom.pad"; \
			type: RECT; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				visible: 0; \
			} \
			description { \
				state: "callerid_on" 0.0; \
				rel1 { to: "elm.swallow.callerid"; relative: 0.0 1.0; } \
				rel2 { to_x: "elm.swallow.callerid"; relative: 0.0 1.0; } \
				align: 0.0 0.0; \
				min: 0 0; \
				visible: 0; \
			} \
		} \
		part { \
			name: "elm.bubble.groupchat.pad"; \
			type: RECT; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 { to: "elm.bubble.callerid.rect"; relative: 1.0 0.0; } \
				rel2 { to: "elm.bubble.callerid.rect"; relative: 1.0 0.0; } \
				align: 0.0 0.0; \
				min: 0 0; \
				fixed: 1 1; \
				visible: 0; \
			} \
			description { \
				state: "groupchat_on"; \
				inherit: "default" 0.0; \
				min: 0 ENTRY_BUBBLE_GROUPCHAT_PAD; \
			} \
		} \
		part { \
			name: "elm.groupchat.text.pad"; \
			type: RECT; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1.to: "elm.bubble.groupchat.pad"; \
				rel2 { to: "elm.bubble.groupchat.pad"; relative: 0.0 1.0; } \
				align: 0.0 0.5; \
				min: ENTRY_BUBBLE_GROUPCHAT_TEXT_PAD 0; \
				fixed: 1 0; \
				visible: 0; \
			} \
		} \
		part { \
			name: "elm.text.groupchat"; \
			type: TEXT; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				align: 0.0 0.0; \
				text { \
					font: "Tizen:style=Roman"; \
					size: 30; \
					align: 0.0 0.0; \
					text_class: "tizen"; \
					min: 1 1; \
				} \
				rel1 { to: "elm.groupchat.text.pad"; relative: 1.0 0.0; } \
				rel2 { to: "elm.groupchat.text.pad"; relative: 1.0 0.0; } \
				color: 110 111 118 255; \
				visible: 0; \
			} \
			description { \
				state: "groupchat_on" 0.0; \
				inherit: "default" 0.0; \
				visible: 1; \
			} \
		} \
		part { \
			name: "elm.bubble.status.pad"; \
			type: RECT; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1.relative: 1.0 0.0; \
				align: 1.0 0.5; \
				min: ENTRY_BUBBLE_STATUS_PAD 0; \
				fixed: 1 0; \
				visible: 0; \
			} \
		} \
		part { \
			name: "elm.bubble.rotate.pad"; \
			type: SPACER; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				align: 1.0 0.0; \
				rel1.relative: 0.0 0.0; \
				rel1.to_x: "elm.bubble.status.pad"; \
				rel2.relative: 0.0 1.0; \
				rel2.to_x: "elm.bubble.status.pad"; \
				min: 0 0; \
				fixed: 1 1; \
			} \
			description { \
				state: "landscape" 0.0; \
				inherit: "default" 0.0; \
				min: 320 0; \
			} \
		} \
		part { \
			name: "elm.bubble.right.pad"; \
			type: SPACER; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 { to_x: "elm.bubble.rotate.pad"; relative: 0.0 0.0; } \
				rel2 { to_x: "elm.bubble.rotate.pad"; relative: 0.0 1.0; } \
				align: 1.0 0.5; \
				min: 7 0; \
				fixed: 1 0; \
			} \
		} \
		part { \
			name: "elm.bubble.lefttop.pad"; \
			type: SPACER; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 { to_x: "elm.bubble.callerid.rect"; to_y: "elm.bubble.groupchat.pad"; relative: 1.0 1.0; } \
				rel2 { to_x: "elm.bubble.callerid.rect"; to_y: "elm.bubble.groupchat.pad"; } \
				align: 0.0 0.0; \
				min: left_pad top_pad; \
				fixed: 1 1; \
			} \
		} \
		part { \
			name: "elm.bubble.righttop.pad"; \
			type: SPACER; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 { to_x: "elm.bubble.right.pad"; to_y: "elm.bubble.groupchat.pad"; relative: 0.0 1.0; } \
				rel2 { to_x: "elm.bubble.right.pad"; to_y: "elm.bubble.groupchat.pad"; relative: 0.0 1.0; } \
				align: 1.0 0.0; \
				min: right_pad 15; \
				fixed: 1 1; \
			} \
		} \
		part { \
			name: "elm.image.bg"; \
			type: IMAGE; \
			mouse_events: 1; \
			repeat_events: 1; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				min: 0 48; \
				rel1.to: "elm.bubble.lefttop.pad"; \
				rel2.to_x: "elm.bubble.rightbottom.pad"; \
				rel2.to_y: "elm.text.time"; \
				rel2.offset: 0 10; \
				color: nc_r nc_g nc_b nc_a; \
				image { \
					normal: bubble_image; \
				} \
			} \
			description { \
				state: "pressed" 0.0; \
				inherit: "default" 0.0; \
				color_class: press_color; \
			} \
		} \
		part { \
			name: "elm.image.focus"; \
			type: IMAGE; \
			mouse_events: 0; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				min: 0 0; \
				rel1.to: "elm.image.bg"; \
				rel2.to: "elm.image.bg"; \
				image { \
					normal: focus_image; \
				} \
				visible: 0; \
			} \
			description { \
				state: "focused" 0.0; \
				inherit: "default" 0.0; \
				min: 0 48; \
				color: COLOR_BLUE; \
				visible: 1; \
			} \
		} \
		part { \
			name: "elm.image.effect"; \
			type: IMAGE; \
			mouse_events: 0; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				min: 0 0; \
				rel1.to: "elm.image.bg"; \
				rel2.to: "elm.image.bg"; \
				image { \
					normal: ef_image; \
				} \
			} \
			description { \
				state: "show" 0.0; \
				inherit: "default" 0.0; \
				min: 0 48; \
				visible: 1; \
			} \
		} \
		part { \
			name: "elm.text"; \
			type: TEXTBLOCK; \
			mouse_events: 1; \
			repeat_events: 1; \
			scale: 1; \
			multiline: 1; \
			description { \
				state: "default" 0.0; \
				min: ENTRY_TEXTBLOCK_MIN_WIDTH 0; \
				align: 0.0 0.0; \
				rel1 { to: "elm.bubble.lefttop.pad"; relative: 1.0 1.0; } \
				rel2 { to: "elm.bubble.righttop.pad"; relative: 0.0 1.0; } \
				text { \
					style: "entry_bubble_receive_textblock_style"; \
					min: 0 1; \
					max: 1 0; \
				} \
			} \
			description { \
				state: "disabled" 0.0; \
				inherit: "default" 0.0; \
				text { \
					style: "entry_textblock_disabled_style"; \
				} \
			} \
		} \
		part { \
			name: "elm.rect.middle.pad"; \
			type: SPACER; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 { to: "elm.text"; relative: 0.0 1.0; } \
				rel2.to: "elm.text"; \
				align: 0.5 0.0; \
				min: 0 0; \
			} \
			description { \
				state: "show" 0.0; \
				inherit: "default" 0.0; \
				min: 0 16; \
			} \
		} \
		part { \
			name: "elm.swallow.end"; \
			type: SWALLOW; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 { to: "elm.rect.middle.pad"; relative: 0.0 1.0; } \
				rel2.to: "elm.rect.middle.pad"; \
				align: 0.0 0.0; \
			} \
		} \
		part { \
			name: "elm.bubble.rightbottom.pad"; \
			type: RECT; \
			scale: 1; \
			description { \
				rel1 { to: "elm.swallow.end"; relative: 1.0 1.0; } \
				rel2.to: "elm.swallow.end"; \
				align: 0.0 0.0; \
				min: right_pad 9; \
				visible: 0; \
				fixed: 1 1; \
			} \
		} \
		part { \
			name: "elm.status.top.pad"; \
			type: SPACER; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				align: 0.0 0.0; \
				rel1 { to: "elm.bubble.rightbottom.pad"; relative: 0.0 1.0; } \
				rel2 { to: "elm.bubble.rightbottom.pad"; relative: 0.0 1.0; } \
				min: 0 6; \
			} \
			description { \
				state: "disabled" 0.0; \
				inherit: "default" 0.0; \
				min: 0 0; \
			} \
		} \
		part { \
			name: "elm.swallow.status"; \
			type: SWALLOW; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 {to_x: "elm.text"; to_y: "elm.status.top.pad"; relative: 0.0 1.0;} \
				rel2 {to_x: "elm.text"; to_y: "elm.status.top.pad"; relative: 0.0 1.0;} \
				align: 0.0 0.0; \
				fixed: 1 0; \
				visible: 0; \
			} \
			description { \
				state: "enabled" 0.0; \
				inherit: "default" 0.0; \
				visible: 1; \
			} \
		} \
		part { \
			name: "sim.icon"; \
			type: SWALLOW; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 {to: "elm.status.top.pad"; relative: 0.0 1.0;} \
				rel2 {to: "elm.status.top.pad"; relative: 0.0 1.0;} \
				align: 1.0 0.0; \
				min: 29 29; \
				fixed: 1 1; \
			} \
			description { \
				state: "disabled" 0.0; \
				inherit: "default" 0.0; \
				min: 0 0; \
				visible: 0; \
			} \
		} \
		part { \
			name: "pad_btwn_time_sim_icon"; \
			type: SPACER; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 {to: "sim.icon"; relative: 0.0 0.0; } \
				rel2 {to: "sim.icon"; relative: 0.0 1.0; } \
				align: 1.0 0.0; \
				min: 8 0; \
				fixed: 1 1; \
			} \
			description { \
				state: "disabled" 0.0; \
				inherit: "default" 0.0; \
				min: 0 0; \
			} \
		} \
		part { \
			name: "elm.text.time"; \
			type: TEXT; \
			scale: 1; \
			mouse_events: 0; \
			repeat_events: 1; \
			description { \
				state: "default" 0.0; \
				text { \
					size: 24; \
					min: 1 1; \
					align: 1.0 0.5; \
				} \
				color: COLOR_BLACK; \
				rel1 {to_x: "elm.text"; to_y: "pad_btwn_time_sim_icon"; relative: 0.0 0.0; } \
				rel2 {to: "pad_btwn_time_sim_icon"; relative: 0.0 1.0; } \
				align: 1.0 0.0; \
				min: 0 29; \
				fixed: 1 1; \
			} \
			description { \
				state: "disabled" 0.0; \
				inherit: "default" 0.0; \
				min: 0 20; \
				visible: 0; \
			} \
		} \
		part { \
			name: "elm.swallow.icon"; \
			type: SWALLOW; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 {to: "sim.icon"; relative: 1.0 0.0; } \
				rel2 {to: "sim.icon"; relative: 1.0 1.0; } \
				align: 0.0 0.0; \
				fixed: 1 1; \
				visible: 1; \
			} \
		} \
		part { \
			name: "elm.bottom.pad"; \
			type: SPACER; \
			scale: 1; \
			description { \
				rel1 { to_y: "elm.image.bg"; relative: 0.0 1.0; } \
				min: 0 ENTRY_BUBBLE_BOTTOM_PAD; \
			} \
		} \
		part { \
			name: "elm.icon.pad"; \
			type: SPACER; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 { to: "elm.bubble.rightbottom.pad"; relative: 1.0 1.0; } \
				rel2.to: "elm.bubble.rightbottom.pad"; \
				min: 3 4; \
				align: 0.0 1.0; \
				fixed: 1 1; \
			} \
		} \
		part { \
			name: "elm.swallow.icon1"; \
			type: SWALLOW; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 { to: "elm.icon.pad"; relative: 1.0 0.0;}\
				rel2 { to: "elm.icon.pad"; relative: 1.0 0.0;} \
				min: 0 0; \
				fixed: 1 1; \
				align: 0.0 0.0; \
				visible: 0; \
			} \
			description { \
				state: "contents_on" 0.0; \
				inherit: "default" 0.0; \
				min: 7 7; \
				max: 10 10; \
				visible: 1; \
			} \
		} \
		part { \
			name: "elm.bubble.select_icon.pad"; \
			type: SPACER; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 { relative: 1.0 0.0; } \
				rel2 { relative: 1.0 1.0; } \
				align: 1.0 0.0; \
				fixed: 1 1; \
				min: 0 0; \
			} \
			description { \
				state: "selectview" 0.0; \
				inherit: "default" 0.0; \
				min: 15 0; \
			} \
		} \
		part { \
			name: "elm.bubble.swallow.select_icon"; \
			type: SWALLOW; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				align: 1.0 0.5; \
				fixed: 1 1; \
				rel1 { to: "elm.bubble.select_icon.pad"; relative: 0.0 0.0; offset: 0 (0-ENTRY_BUBBLE_BOTTOM_PAD); } \
				rel2 { to: "elm.bubble.select_icon.pad"; relative: 0.0 1.0; offset: 0 (0-ENTRY_BUBBLE_BOTTOM_PAD); } \
				min: 0 0; \
				max: 0 0; \
				visible: 0; \
			} \
			description { \
				state: "selectview" 0.0; \
				inherit: "default" 0.0; \
				min: 40 40; \
				max: 40 40; \
				visible: 1; \
			} \
		} \
	} \
	programs { \
		program { \
			name: "focus"; \
			signal: "load"; \
			source: ""; \
			action: FOCUS_SET; \
			target: "elm.text"; \
		} \
		program { \
			name: "disable"; \
			signal: "elm,state,disabled"; \
			source: "elm"; \
			action: STATE_SET "disabled" 0.0; \
			target: "elm.text"; \
		} \
		program { \
			name: "enable"; \
			signal: "elm,state,enabled"; \
			source: "elm"; \
			action: STATE_SET "default" 0.0; \
			target: "elm.text"; \
		} \
		program { \
			name: "action_focus";	\
			signal: "elm,action,focus_highlight,show"; \
			source: "elm"; \
			action: STATE_SET "focused" 0.0; \
			target: "elm.image.bg"; \
		} \
		program { \
			name: "action_unfocus"; \
			signal: "elm,action,focus_highlight,hide"; \
			source: "elm"; \
			action: STATE_SET "default" 0.0; \
			target: "elm.image.bg"; \
		} \
		program { \
			name: "rotate_landscape"; \
			signal: "elm,action,rotate,landscape"; \
			source: ""; \
			action: STATE_SET "landscape" 0.0; \
			target: "elm.bubble.rotate.pad"; \
		} \
		program { \
			name: "rotate_portrait"; \
			signal: "elm,action,rotate,portrait"; \
			source: ""; \
			action: STATE_SET "default" 0.0; \
			target: "elm.bubble.rotate.pad"; \
		} \
		program { \
			name: "selectview_on"; \
			signal: "elm,state,select,enable"; \
			source: "elm"; \
			action: STATE_SET "selectview" 0.0; \
			target: "elm.bubble.select_icon.pad"; \
			target: "elm.bubble.swallow.select_icon"; \
		} \
		program { \
			name: "selectview_off"; \
			signal: "elm,state,select,disable"; \
			source: "elm"; \
			action: STATE_SET "default" 0.0; \
			target: "elm.bubble.select_icon.pad"; \
			target: "elm.bubble.swallow.select_icon"; \
		} \
		program { \
			name: "go_callerid_on"; \
			signal: "elm,state,callerid,enabled"; \
			source: "elm"; \
			action: STATE_SET "callerid_on" 0.0; \
			target: "elm.bubble.callerid.rect"; \
			target: "elm.swallow.callerid"; \
			target: "elm.callerid.bottom.pad"; \
		} \
		program { \
			name: "go_callerid_off"; \
			signal: "elm,state,callerid,disabled"; \
			source: "elm"; \
			action: STATE_SET "default" 0.0; \
			target: "elm.bubble.callerid.rect"; \
			target: "elm.swallow.callerid"; \
			target: "elm.callerid.bottom.pad"; \
		} \
		program { \
			name: "go_groupchat_on"; \
			signal: "elm,state,groupchat,enabled"; \
			source: "elm"; \
			action: STATE_SET "groupchat_on" 0.0; \
			target: "elm.bubble.groupchat.pad"; \
			target: "elm.text.groupchat"; \
		} \
		program { \
			name: "go_groupchat_off"; \
			signal: "elm,state,groupchat,disabled"; \
			source: "elm"; \
			action: STATE_SET "default" 0.0; \
			target: "elm.bubble.groupchat.pad"; \
			target: "elm.text.groupchat"; \
		} \
		program { \
			name: "go_textstatus_on"; \
			signal: "elm,state,text,status,enabled"; \
			source: ""; \
			action: STATE_SET "default" 0.0; \
			target: "elm.text.time"; \
			after: "go_contentstatus_off"; \
		} \
		program { \
			name: "go_textstatus_off"; \
			signal: "elm,state,text,status,disabled"; \
			source: ""; \
			action: STATE_SET "disabled" 0.0; \
			target: "elm.text.time"; \
		} \
		program { \
			name: "go_contentstatus_on"; \
			signal: "elm,state,content,status,enabled"; \
			source: ""; \
			action: STATE_SET "enabled" 0.0; \
			target: "elm.swallow.status"; \
			after: "go_textstatus_off"; \
		} \
		program { \
			name: "go_contentstatus_off"; \
			signal: "elm,state,content,status,disabled"; \
			source: ""; \
			action: STATE_SET "default" 0.0; \
			target: "elm.swallow.status"; \
		} \
		program { \
			name: "effect_show"; \
			signal: "elm,state,effect,show"; \
			source: ""; \
			action: STATE_SET "show" 0.0; \
			target: "elm.image.effect"; \
		} \
		program { \
			name: "effect_off"; \
			signal: "elm,state,effect,hide"; \
			source: ""; \
			action: STATE_SET "default" 0.0; \
			target: "elm.image.effect"; \
		} \
		program { \
			name: "focus_show"; \
			signal: "elm,state,focus,show"; \
			source: ""; \
			action: STATE_SET "focused" 0.0; \
			target: "elm.image.focus"; \
		} \
		program { \
			name: "focus_off"; \
			signal: "elm,state,focus,hide"; \
			source: ""; \
			action: STATE_SET "default" 0.0; \
			target: "elm.image.focus"; \
		} \
		program { \
			name: "show_middle_pad"; \
			signal: "elm,state,middle,pad,enabled"; \
			source: "elm"; \
			action: STATE_SET "show" 0.0; \
			target: "elm.rect.middle.pad"; \
		} \
		program { \
			name: "hide_middle_pad"; \
			signal: "elm,state,middle,pad,disabled"; \
			source: "elm"; \
			action: STATE_SET "default" 0.0; \
			target: "elm.rect.middle.pad"; \
		} \
		program { \
			name: "go_contents_on"; \
			signal: "elm,state,contents,enabled"; \
			source: ""; \
			action: STATE_SET "contents_on" 0.0; \
			target: "elm.swallow.icon1"; \
		} \
		program { \
			name: "go_contents_off"; \
			signal: "elm,state,contents,disabled"; \
			source: ""; \
			action: STATE_SET "default" 0.0; \
			target: "elm.swallow.icon1"; \
		} \
		program { \
			name: "anchor_pressed"; \
			signal: "elm,state,anchor,pressed"; \
			source: "*"; \
			script { \
				set_int(anchor_down, 1); \
			} \
		} \
		program { \
			name: "anchor_released"; \
			signal: "elm,state,anchor,released"; \
			source: "*"; \
			script { \
				set_int(anchor_down, 0); \
			} \
		} \
		program { \
			name: "bubble_pressed"; \
			signal: "mouse,down,1"; \
			source: "elm.image.bg"; \
			script { \
				if (get_int(anchor_down) == 0) { \
					set_state(PART:"elm.image.bg", "pressed", 0.0);\
				} \
			} \
		} \
		program { \
			name: "bubble_released"; \
			signal: "mouse,up,1"; \
			source: "*"; \
			action: STATE_SET "default" 0.0; \
			target: "elm.image.bg"; \
		} \
		program { \
			name: "attachment_click"; \
			signal: "mouse,clicked,1"; \
			source: "elm.rect.attachment"; \
			action: SIGNAL_EMIT "label,swallow,clicked" ""; \
		} \
		program { \
			name: "sound_click"; \
			signal: "mouse,clicked,1"; \
			source: "elm.rect.sound"; \
			action: SIGNAL_EMIT "label,swallow,clicked" ""; \
		} \
		program { \
			name: "play_button_press"; \
			signal: "elm,state,play,sound"; \
			source: "elm"; \
			action: RUN_PLUGIN "touch_sound"; \
		} \
		program { \
			name: "touch_snd"; \
			signal: "bubble,anchor,clicked"; \
			source: "elm.text"; \
			action: RUN_PLUGIN "touch_sound"; \
		} \
		program { \
			name: "sim_icon_disabled"; \
			signal: "sim,icon,disabled"; \
			source: "*"; \
			action: STATE_SET "disabled" 0.0; \
			target: "sim.icon"; \
			target: "pad_btwn_time_sim_icon"; \
		} \
		program { \
			name: "sim_icon_enabled"; \
			signal: "sim,icon,enabled"; \
			source: "*"; \
			action: STATE_SET "default" 0.0; \
			target: "sim.icon"; \
			target: "pad_btwn_time_sim_icon"; \
		} \
	} \
} \
///////////////////////////////////////////////////////////////////////////
BUBBLE_RECV_MESSAGE_STYLE("recv_style_01", "messagebubble_bg_receive_bg.#.png", "bubble_with_search_result_receive.#.png", "messagebubble_bg_receive_bg_ef.#.png", 4, 115, 251, 204, B042, 32, 15, 15)

// TODO : HANDLING FOCUS
BUBBLE_RECV_MESSAGE_STYLE("recv_style_01_focus", "messagebubble_bg_receive_bg.#.png", "bubble_with_search_result_receive.#.png", "messagebubble_bg_receive_bg_ef.#.png", 4, 115, 251, 204, B042, 32, 15, 15)
/////////////////////////////////////////////////////////////////////////////////


#define BUBBLE_SENT_MESSAGE_STYLE(style_name, bubble_image, focus_image, ef_image, nc_r, nc_g, nc_b, nc_a, press_color, left_pad, right_pad, top_pad) \
group { \
	name: "elm/label/base/sentmessage/custom/"style_name; \
	script { \
		public anchor_down = 0; \
	} \
	data { \
		item: "focus_highlight" "on"; \
	} \
	parts { \
		part { \
			name: "base"; \
			type: RECT; \
			mouse_events: 1; \
			description { \
				state: "default" 0.0; \
				color: 255 255 255 0; \
			} \
		} \
		part { \
			name: "elm.bubble.rotate.pad"; \
			type: SPACER; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				align: 0.0 0.0; \
				rel1.relative: 0.0 0.0; \
				rel2.relative: 0.0 1.0; \
				min: 0 0; \
				max: 0 0; \
				fixed: 1 1; \
			} \
			description { \
				state: "landscape" 0.0; \
				inherit: "default" 0.0; \
				min: 320 0; \
			} \
		} \
		part { \
			name: "elm.bubble.left.pad"; \
			type: SPACER; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1.relative: 1.0 0.0; \
				rel1.to_x: "elm.bubble.rotate.pad"; \
				rel2.relative: 1.0 1.0; \
				rel2.to_x: "elm.bubble.rotate.pad"; \
				align: 0.0 0.0; \
				min: 62 0; \
				max: 62 0; \
				fixed: 1 1; \
			} \
			description { \
				state: "selectview" 0.0; \
				inherit: "default" 0.0; \
				min: 7 0; \
			} \
		} \
		part { \
			name: "elm.bubble.status.pad"; \
			type: RECT; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1.relative: 1.0 0.0; \
				rel2.relative: 1.0 1.0; \
				align: 1.0 0.5; \
				min: 7 0; \
				max: 7 0; \
				fixed: 1 0; \
				visible: 0; \
			} \
			description { \
				state: "selectview" 0.0; \
				inherit: "default" 0.0; \
				min: 62 0; \
			} \
		} \
		part { \
			name: "elm.bubble.select_icon.pad"; \
			type: SPACER; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				align: 1.0 0.0; \
				fixed: 1 1; \
				rel1 { relative: 1.0 0.0; } \
				rel2 { relative: 1.0 1.0; } \
				min: 0 0; \
			} \
			description { \
				state: "selectview" 0.0; \
				inherit: "default" 0.0; \
				min: 15 0; \
			} \
		} \
		part { \
			name: "elm.bubble.swallow.select_icon"; \
			type: SWALLOW; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				fixed: 1 1; \
				rel1 { to: "elm.bubble.select_icon.pad"; relative: 0.0 0.0; offset: 0 (0-ENTRY_BUBBLE_BOTTOM_PAD);} \
				rel2 { to: "elm.bubble.select_icon.pad"; relative: 0.0 1.0; offset: 0 (0-ENTRY_BUBBLE_BOTTOM_PAD);} \
				align: 1.0 0.5; \
				min: 0 0; \
				max: 0 0; \
				visible: 0; \
			} \
			description { \
				state: "selectview" 0.0; \
				inherit: "default" 0.0; \
				min: 40 40; \
				max: 40 40; \
				visible: 1; \
			} \
		} \
		part { \
			name: "elm.bubble.callerid.pad"; \
			type: RECT; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 { to_x: "elm.bubble.status.pad"; relative: 0.0 0.0; } \
				rel2 { to_x: "elm.bubble.status.pad"; relative: 0.0 0.0; } \
				align: 1.0 0.0; \
				min: 0 0; \
				fixed: 1 1; \
				visible: 0; \
			} \
			description { \
				state: "callerid_on"; \
				inherit: "default" 0.0; \
				min: ENTRY_BUBBLE_CALLERID_PAD 0; \
			} \
		} \
		part { \
			name: "elm.callerid.icon.pad"; \
			type: SPACER; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 { to_x: "elm.bubble.status.pad"; relative: 0.0 0.0; } \
				rel2 { to_x: "elm.bubble.status.pad"; relative: 0.0 0.0; } \
				align: 1.0 0.0; \
				min: ENTRY_BUBBLE_CALLERID_ICON_PAD 0; \
				fixed: 1 1; \
			} \
		} \
		part { \
			name: "elm.swallow.callerid"; \
			type: SWALLOW; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				min: ENTRY_BUBBLE_CALLERID_WIDTH ENTRY_BUBBLE_CALLERID_HEIGHT; \
				max: ENTRY_BUBBLE_CALLERID_WIDTH ENTRY_BUBBLE_CALLERID_HEIGHT; \
				fixed: 1 1; \
				align: 1.0 0.0; \
				rel1.to: "elm.callerid.icon.pad"; \
				rel2 { to: "elm.callerid.icon.pad"; relative: 0.0 0.0; } \
				visible: 0; \
			} \
			description { \
				state: "callerid_on" 0.0; \
				inherit: "default" 0.0; \
				visible: 1; \
			} \
		} \
		part { \
			name: "elm.callerid.bottom.pad"; \
			type: RECT; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				visible: 0; \
			} \
			description { \
				state: "callerid_on" 0.0; \
				rel1 { to: "elm.swallow.callerid";	relative: 0.0 1.0; } \
				rel2 { to_x: "elm.swallow.callerid"; relative: 0.0 1.0; } \
				align: 0.0 0.0; \
				min: 0 0; \
				visible: 0; \
			} \
		} \
		part { \
			name: "elm.bubble.groupchat.pad"; \
			type: RECT; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 { to: "elm.bubble.callerid.pad"; relative: 0.0 0.0; } \
				rel2 { to: "elm.bubble.callerid.pad"; relative: 0.0 0.0; } \
				align: 1.0 0.0; \
				min: 0 0; \
				fixed: 1 1; \
				visible: 0; \
			} \
			description { \
				state: "groupchat_on"; \
				inherit: "default" 0.0; \
				min: 0 ENTRY_BUBBLE_GROUPCHAT_PAD; \
			} \
		} \
		part { \
			name: "elm.groupchat.text.pad"; \
			type: RECT; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 { to: "elm.bubble.groupchat.pad"; relative: 1.0 0.0; } \
				rel2.to: "elm.bubble.groupchat.pad"; \
				align: 1.0 0.5; \
				min: ENTRY_BUBBLE_GROUPCHAT_TEXT_PAD 0; \
				fixed: 1 0; \
				visible: 0; \
			} \
		} \
		part { \
			name: "elm.text.groupchat"; \
			type: TEXT; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				align: 1.0 0.0; \
				text { \
					font: "Tizen:style=Roman"; \
					size: 30; \
					align: 1.0 0.0; \
					text_class: "tizen"; \
					min: 1 1; \
				} \
				rel1.to: "elm.groupchat.text.pad"; \
				rel2 { to: "elm.groupchat.text.pad"; relative: 0.0 0.0; } \
				color: 110 111 118 255; \
				visible: 0; \
			} \
			description { \
				state: "groupchat_on" 0.0; \
				inherit: "default" 0.0; \
				visible: 1; \
			} \
		} \
		part { \
			name: "elm.bubble.lefttop.pad"; \
			type: SPACER; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 { to_x: "elm.bubble.left.pad";  to_y: "elm.bubble.groupchat.pad"; relative: 1.0 1.0; } \
				rel2 { to_x: "elm.bubble.left.pad";  to_y: "elm.bubble.groupchat.pad"; } \
				align: 0.0 0.0; \
				min: left_pad top_pad; \
				fixed: 1 1; \
			} \
		} \
		part { \
			name: "elm.bubble.righttop.pad"; \
			type: SPACER; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 { to_x: "elm.bubble.callerid.pad"; to_y: "elm.bubble.groupchat.pad"; relative: 0.0 1.0; } \
				rel2 { to_x: "elm.bubble.callerid.pad"; to_y: "elm.bubble.groupchat.pad"; relative: 0.0 1.0; } \
				align: 1.0 0.0; \
				min: right_pad 15; \
				fixed: 1 1; \
			} \
		} \
		part { \
			name: "elm.image.bg"; \
			type: IMAGE; \
			scale: 1; \
			mouse_events: 1; \
			repeat_events: 1; \
			description { \
				state: "default" 0.0; \
				min: 0 48; \
				rel1 { to_x: "elm.bubble.leftbottom.pad"; to_y: "elm.bubble.lefttop.pad";} \
				rel2 { to_x: "elm.bubble.righttop.pad"; to_y: "elm.text.time"; offset: 0 10; } \
				color: nc_r nc_g nc_b nc_a; \
				image { \
					normal: bubble_image; \
				} \
			} \
			description {	\
				state: "pressed" 0.0; \
				inherit: "default" 0.0; \
					color_class: press_color; \
			} \
		} \
		part { \
			name: "elm.image.focus"; \
			type: IMAGE; \
			mouse_events: 0; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				min: 0 0; \
				rel1.to: "elm.image.bg"; \
				rel2.to: "elm.image.bg"; \
				image { \
					normal: focus_image; \
				} \
				visible: 0; \
			} \
			description { \
				state: "focused" 0.0; \
				inherit: "default" 0.0; \
				min: 0 48; \
				color: COLOR_BLUE; \
				visible: 1; \
			} \
		} \
		part { \
			name: "elm.image.effect"; \
			type: IMAGE; \
			mouse_events: 0; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				min: 0 0; \
				rel1.to: "elm.image.bg"; \
				rel2.to: "elm.image.bg"; \
				image { \
					normal: ef_image; \
				} \
			} \
			description { \
				state: "show" 0.0; \
				inherit: "default" 0.0; \
				min: 0 48; \
				visible: 1; \
			} \
		} \
		part { \
			name: "elm.text"; \
			type: TEXTBLOCK; \
			mouse_events: 1; \
			repeat_events: 1; \
			scale: 1; \
			multiline: 1; \
			description { \
				state: "default" 0.0; \
				min: ENTRY_TEXTBLOCK_MIN_WIDTH 0; \
				align: 1.0 0.0; \
				rel1 { to: "elm.bubble.lefttop.pad"; relative: 1.0 1.0; } \
				rel2 { to: "elm.bubble.righttop.pad"; relative: 0.0 1.0; } \
				text { \
					style: "entry_bubble_sent_textblock_style"; \
					min: 0 1; \
					max: 1 0; \
				} \
			} \
			description { \
				state: "disabled" 0.0; \
				inherit: "default" 0.0; \
				text { \
					style: "entry_textblock_disabled_style"; \
				} \
			} \
		} \
		part { \
			name: "elm.rect.middle.pad"; \
			type: SPACER; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 { to: "elm.text"; relative: 0.0 1.0;} \
				rel2.to: "elm.text"; \
				align: 0.5 0.0; \
				min: 0 0; \
			} \
			description { \
				state: "show" 0.0; \
				inherit: "default" 0.0; \
				min: 0 9; \
			} \
		} \
		part { \
			name: "elm.swallow.end"; \
			type: SWALLOW; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 { to: "elm.rect.middle.pad"; relative: 0.0 1.0; } \
				rel2.to: "elm.rect.middle.pad"; \
				align: 1.0 0.0; \
			} \
		} \
		part { \
			name: "elm.bubble.leftbottom.pad"; \
			type: RECT; \
			scale: 1; \
			description { \
				rel1 { to: "elm.swallow.end"; relative: 0.0 1.0; } \
				rel2 { to: "elm.swallow.end"; relative: 0.0 1.0; } \
				align: 1.0 0.0; \
				min: left_pad 9; \
				visible: 0; \
				fixed: 1 1; \
			} \
		} \
		part { \
			name: "elm.status.top.pad"; \
			type: RECT; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				align: 0.0 0.0; \
				rel1 { to: "elm.bubble.leftbottom.pad"; relative: 0.0 1.0; } \
				rel2 { to: "elm.bubble.leftbottom.pad"; relative: 0.0 1.0; } \
				min: 0 6; \
				visible: 1; \
			} \
			description { \
				state: "disabled" 0.0; \
				inherit: "default" 0.0; \
				min: 0 0; \
				visible: 0; \
			} \
		} \
		part { \
			name: "elm.swallow.status"; \
			type: SWALLOW; \
			scale: 1; \
			clip_to: "clipper"; \
			description { \
				state: "default" 0.0; \
				rel1 {to_x: "elm.text"; to_y: "elm.status.top.pad"; relative: 1.0 1.0; } \
				rel2 {to_x: "elm.text"; to_y: "elm.status.top.pad"; } \
				align: 1.0 0.0; \
				fixed: 1 0; \
				visible: 0; \
			} \
			description { \
				state: "enabled" 0.0; \
				inherit: "default" 0.0; \
				visible: 1; \
			} \
		} \
		part { \
			name: "draft.badge"; \
			type: IMAGE; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 { to: "elm.swallow.status"; relative: 1.0 0.0; } \
				rel2 { to: "elm.swallow.status"; relative: 1.0 1.0; } \
				align: 1.0 0.0; \
				color_class: B011; \
				image { \
					normal: "badge_bg_draft.png"; \
				} \
				min: 29 29; \
				visible: 0; \
				fixed: 1 1; \
			} \
			description { \
				state: "draft"; \
				inherit: "default" 0.0; \
				visible: 1; \
			} \
		} \
		part { \
			name: "sim.icon"; \
			type: SWALLOW; \
			mouse_events: 1; \
			repeat_events: 0; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 { to: "elm.swallow.status"; relative: 1.0 0.0; } \
				rel2 { to: "elm.swallow.status"; relative: 1.0 1.0; } \
				align: 1.0 0.0; \
				min: 29 29; \
				fixed: 1 1; \
				visible: 1; \
			} \
			description { \
				state: "disabled" 0.0; \
				inherit: "default" 0.0; \
				min: 0 0; \
				visible: 0; \
			} \
		} \
		part { \
			name: "elm.text.time"; \
			type: TEXT; \
			scale: 1; \
			mouse_events: 0; \
			repeat_events: 1; \
			description { \
				state: "default" 0.0; \
				text { \
					min: 1 1; \
					size: 24; \
					align: 1.0 1.0; \
				} \
				color: COLOR_BLACK; \
				rel1 { to_x: "elm.text"; to_y: "sim.icon"; relative: 0.0 0.0; } \
				rel2 { to: "sim.icon"; relative: 0.0 1.0; offset: -8 0; } \
				align: 0.0 0.0; \
				min: 0 29; \
				fixed: 1 0; \
			} \
			description { \
				state: "disabled" 0.0; \
				inherit: "default" 0.0; \
				visible: 0; \
			} \
		} \
		part { \
			name: "elm.swallow.icon"; \
			type: SWALLOW; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 { to: "elm.text.time"; relative: 0.0 0.0; } \
				rel2 { to: "elm.text.time"; relative: 0.0 1.0; } \
				align: 1.0 0.0; \
				fixed: 1 1; \
				visible: 1; \
			} \
		} \
		part { \
			name: "elm.bottom.pad"; \
			type: SPACER; \
			scale: 1; \
			description { \
				rel1 { to_y: "elm.image.bg"; relative: 0.0 1.0; } \
				min: 0 ENTRY_BUBBLE_BOTTOM_PAD; \
			} \
		} \
		part { \
			name: "elm.icon.pad"; \
			type: SPACER; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 { to: "elm.bubble.leftbottom.pad"; relative: 0.0 1.0; } \
				rel2 { to: "elm.bubble.leftbottom.pad"; relative: 0.0 1.0; } \
				min: 3 4; \
				align: 1.0 1.0; \
				fixed: 1 1; \
			} \
		} \
		part { \
			name: "elm.swallow.icon1"; \
			type: SWALLOW; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1 { to: "elm.icon.pad"; }\
				rel2 { to: "elm.icon.pad"; relative: 0.0 0.0; } \
				min: 0 0; \
				fixed: 1 1; \
				align: 1.0 0.0; \
				visible: 0; \
			} \
			description { \
				state: "contents_on"; \
				inherit: "default" 0.0; \
				min: 40 40; \
				max: 60 60; \
				visible: 1; \
			} \
		} \
		part { \
			name: "clipper"; \
			type: RECT; \
			description { \
				state: "default" 0.0; \
				color: 175 175 175 255; \
			} \
		} \
	} \
	programs { \
		program { \
			name: "focus"; \
			signal: "load"; \
			source: ""; \
			action: FOCUS_SET; \
			target: "elm.text"; \
		} \
		program { \
			name: "draft_show"; \
			signal: "elm,action,draft_badge,show"; \
			source: ""; \
			action: STATE_SET "draft" 0.0; \
			target: "draft.badge"; \
		} \
		program { \
			name: "disable"; \
			signal: "elm,state,disabled"; \
			source: "elm"; \
			action: STATE_SET "disabled" 0.0; \
			target: "elm.text"; \
		} \
		program { \
			name: "enable"; \
			signal: "elm,state,enabled"; \
			source: "elm"; \
			action: STATE_SET "default" 0.0; \
			target: "elm.text"; \
		} \
		program { \
			name: "action_focus";	\
			signal: "elm,action,focus_highlight,show"; \
			source: "elm"; \
			action: STATE_SET "focused" 0.0; \
			target: "elm.image.bg"; \
		} \
		program { \
			name: "action_unfocus"; \
			signal: "elm,action,focus_highlight,hide"; \
			source: "elm"; \
			action: STATE_SET "default" 0.0; \
			target: "elm.image.bg"; \
		} \
		program { \
			name: "rotate_landscape"; \
			signal: "elm,action,rotate,landscape"; \
			source: ""; \
			action: STATE_SET "landscape" 0.0; \
			target: "elm.bubble.rotate.pad"; \
		} \
		program { \
			name: "rotate_portrait"; \
			signal: "elm,action,rotate,portrait"; \
			source: ""; \
			action: STATE_SET "default" 0.0; \
			target: "elm.bubble.rotate.pad"; \
		} \
		program { \
			name: "selectview_on"; \
			signal: "elm,state,select,enable"; \
			source: "elm"; \
			action: STATE_SET "selectview" 0.0; \
			target: "elm.bubble.select_icon.pad"; \
			target: "elm.bubble.swallow.select_icon"; \
			target: "elm.bubble.status.pad"; \
			target: "elm.bubble.left.pad"; \
		} \
		program { \
			name: "selectview_off"; \
			signal: "elm,state,select,disable"; \
			source: "elm"; \
			action: STATE_SET "default" 0.0; \
			target: "elm.bubble.select_icon.pad"; \
			target: "elm.bubble.swallow.select_icon"; \
			target: "elm.bubble.status.pad"; \
			target: "elm.bubble.left.pad"; \
		} \
		program { \
			name: "go_callerid_on"; \
			signal: "elm,state,callerid,enabled"; \
			source: "elm"; \
			action: STATE_SET "callerid_on" 0.0; \
			target: "elm.bubble.callerid.pad"; \
			target: "elm.swallow.callerid"; \
			target: "elm.callerid.bottom.pad"; \
		} \
		program { \
			name: "go_callerid_off"; \
			signal: "elm,state,callerid,disabled"; \
			source: "elm"; \
			action: STATE_SET "default" 0.0; \
			target: "elm.bubble.callerid.pad"; \
			target: "elm.swallow.callerid"; \
			target: "elm.callerid.bottom.pad"; \
		} \
		program { \
			name: "go_groupchat_on"; \
			signal: "elm,state,groupchat,enabled"; \
			source: "elm"; \
			action: STATE_SET "groupchat_on" 0.0; \
			target: "elm.bubble.groupchat.pad"; \
			target: "elm.text.groupchat"; \
		} \
		program { \
			name: "go_groupchat_off"; \
			signal: "elm,state,groupchat,disabled"; \
			source: "elm"; \
			action: STATE_SET "default" 0.0; \
			target: "elm.bubble.groupchat.pad"; \
			target: "elm.text.groupchat"; \
		} \
		program { \
			name: "go_textstatus_on"; \
			signal: "elm,state,text,status,enabled"; \
			source: ""; \
			action: STATE_SET "default" 0.0; \
			target: "elm.text.time"; \
			after: "go_contentstatus_off"; \
		} \
		program { \
			name: "go_textstatus_off"; \
			signal: "elm,state,text,status,disabled"; \
			source: ""; \
			action: STATE_SET "disabled" 0.0; \
			target: "elm.text.time"; \
		} \
		program { \
			name: "effect_show"; \
			signal: "elm,state,effect,show"; \
			source: ""; \
			action: STATE_SET "show" 0.0; \
			target: "elm.image.effect"; \
		} \
		program { \
			name: "effect_off"; \
			signal: "elm,state,effect,hide"; \
			source: ""; \
			action: STATE_SET "default" 0.0; \
			target: "elm.image.effect"; \
		} \
		program { \
			name: "focus_show"; \
			signal: "elm,state,focus,show"; \
			source: ""; \
			action: STATE_SET "focused" 0.0; \
			target: "elm.image.focus"; \
		} \
		program { \
			name: "focus_off"; \
			signal: "elm,state,focus,hide"; \
			source: ""; \
			action: STATE_SET "default" 0.0; \
			target: "elm.image.focus"; \
		} \
		program { \
			name: "go_contentstatus_on"; \
			signal: "elm,state,content,status,enabled"; \
			source: ""; \
			action: STATE_SET "enabled" 0.0; \
			target: "elm.swallow.status"; \
			after: "go_textstatus_off"; \
		} \
		program { \
			name: "go_contentstatus_off"; \
			signal: "elm,state,content,status,disabled"; \
			source: ""; \
			action: STATE_SET "default" 0.0; \
			target: "elm.swallow.status"; \
		} \
		program { \
			name: "show_middle_pad"; \
			signal: "elm,state,middle,pad,enabled"; \
			source: "elm"; \
			action: STATE_SET "show" 0.0; \
			target: "elm.rect.middle.pad"; \
		} \
		program { \
			name: "hide_middle_pad"; \
			signal: "elm,state,middle,pad,disabled"; \
			source: "elm"; \
			action: STATE_SET "default" 0.0; \
			target: "elm.rect.middle.pad"; \
		} \
		program { \
			name: "go_contents_on"; \
			signal: "elm,state,contents,enabled"; \
			source: ""; \
			action: STATE_SET "contents_on" 0.0; \
			target: "elm.swallow.icon1"; \
		} \
		program { \
			name: "go_contents_off"; \
			signal: "elm,state,contents,disabled"; \
			source: ""; \
			action: STATE_SET "default" 0.0; \
			target: "elm.swallow.icon1"; \
		} \
		program { \
			name: "anchor_pressed"; \
			signal: "elm,state,anchor,pressed"; \
			source: "*"; \
			script { \
				set_int(anchor_down, 1); \
			} \
		} \
		program { \
			name: "anchor_released"; \
			signal: "elm,state,anchor,released"; \
			source: "*"; \
			script { \
				set_int(anchor_down, 0); \
			} \
		} \
		program { \
			name: "bubble_pressed"; \
			signal: "mouse,down,1"; \
			source: "elm.image.bg"; \
			script { \
				if (get_int(anchor_down) == 0) { \
					set_state(PART:"elm.image.bg", "pressed", 0.0); \
				} \
			} \
		} \
		program { \
			name: "bubble_released"; \
			signal: "mouse,up,1"; \
			source: "*"; \
			action: STATE_SET "default" 0.0; \
			target: "elm.image.bg"; \
		} \
		program { \
			name: "attachment_click"; \
			signal: "mouse,clicked,1"; \
			source: "elm.rect.attachment"; \
			action: SIGNAL_EMIT "label,swallow,clicked" ""; \
		} \
		program { \
			name: "sound_click"; \
			signal: "mouse,clicked,1"; \
			source: "elm.rect.sound"; \
			action: SIGNAL_EMIT "label,swallow,clicked" ""; \
		} \
		program { \
			name: "play_button_press"; \
			signal: "elm,state,play,sound"; \
			source: "elm"; \
			action: RUN_PLUGIN "touch_sound"; \
		} \
		program { \
			name: "touch_snd"; \
			signal: "bubble,anchor,clicked"; \
			source: "elm.text"; \
			action: RUN_PLUGIN "touch_sound"; \
		} \
		program { \
			name: "sim_icon_disabled"; \
			signal: "sim,icon,disabled"; \
			source: "*"; \
			action: STATE_SET "disabled" 0.0; \
			target: "sim.icon"; \
		} \
		program { \
			name: "sim_icon_enabled"; \
			signal: "sim,icon,enabled"; \
			source: "*"; \
			action: STATE_SET "default" 0.0; \
			target: "sim.icon"; \
		} \
	} \
}
//////////////////////////////////////////////////////////////////////////////
BUBBLE_SENT_MESSAGE_STYLE("sent_style_01", "messagebubble_bg_send_bg.#.png", "bubble_with_search_result_send.#.png", "messagebubble_bg_send_bg_ef.#.png", 255, 255, 255, 204, B042, 15, 32, 15)

BUBBLE_SENT_MESSAGE_STYLE("sent_style_draft_01", "messagebubble_bg_send_bg.#.png", "bubble_with_search_result_send.#.png", "messagebubble_bg_send_bg_ef.#.png", 255, 255, 255, 204, B042, 15, 32, 15)

BUBBLE_SENT_MESSAGE_STYLE("sent_style_01_focus", "messagebubble_bg_send_bg.#.png", "bubble_with_search_result_send.#.png", "messagebubble_bg_send_bg_ef.#.png", 255, 255, 255, 204, B042, 15, 32, 15)

BUBBLE_SENT_MESSAGE_STYLE("sent_style_01_failed", "messagebubble_bg_send_bg.#.png", "bubble_with_search_result_send.#.png", "messagebubble_bg_send_bg_ef.#.png", 255, 255, 255, 204, B042, 15, 32, 15)

BUBBLE_SENT_MESSAGE_STYLE("sent_style_01_failed_focus", "messagebubble_bg_send_bg.#.png", "bubble_with_search_result_send.#.png", "messagebubble_bg_send_bg_ef.#.png", 255, 255, 255, 204, B042, 15, 32, 15)

//TODO: clean odl defines and move new defines to their places
#define BUBBLE_INFO_HEIGHT 88
#define BUBBLE_CONTENT_WIDTH_MAX 340
#define BUBBLE_BG_IMAGE_MIN_WIDTH 120
#define BUBBLE_BG_IMAGE_MIN_HEIGHT 122
#define BUBBLE_CONTENT_PAD_TOP_HEIGHT 10
#define BUBBLE_CONTENT_PAD_BOTTOM_HEIGHT 16
#define BUBBLE_CONTENT_PAD_LEFT_WIDTH 34
#define BUBBLE_CONTENT_PAD_RIGHT_WIDTH 34
#define BUBBLE_PAD_BOTTOM_HEIGHT 17
#define BUBBLE_PAD_LEFT_WIDTH 32
#define BUBBLE_PAD_RIGHT_WIDTH 32
#define BUBBLE_PAD_CHECK_WIDTH 32
#define BUBBLE_CHECK_WIDTH 50
#define BUBBLE_CHECK_HEIGHT 50
#define BUBBLE_INFO_THUMB_HEIGHT 80
#define BUBBLE_INFO_THUMB_WIDTH 80
#define BUBBLE_INFO_THUMB_PAD_WIDTH 13
#define BUBBLE_INFO_PAD_TOP_HEIGHT 9
#define BUBBLE_INFO_STATUS_HEIGHT 38
#define BUBBLE_INFO_STATUS_WIDTH 30
#define BUBBLE_INFO_STATUS_PAD_WIDTH 4
#define BUBBLE_INFO_TEXT_HEIGHT 38
#define BUBBLE_DRAFT_PAD_WIDTH 94
#define BUBBLE_DRAFT_BUTTON_PAD_WIDTH 26
#define BUBBLE_DRAFT_BUTTON_PAD_HEIGHT 7
#define BUBBLE_DRAFT_BUTTON_WIDTH 56
#define BUBBLE_DRAFT_BUTTON_HEIGHT 56
#define BUBBLE_FAILED_BUTTON_WIDTH 56
#define BUBBLE_FAILED_BUTTON_HEIGHT 56

#define BUBBLE_BG_COLOR 90 111 199 230
#define BUBBLE_BG_COLOR_PRESSED 78 97 173 230
#define BUBBLE_BG_DRAFT_COLOR 106 126 204 255
#define BUBBLE_BG_DRAFT_COLOR_PRESSED 80 94 153 255
#define BUBBLE_BG_FAILED_COLOR 0 0 0 102
#define BUBBLE_BG_FAILED_COLOR_PRESSED 0 0 0 133

group { name: "elm/genlist/item/sentbubble/default";
    alias: "elm/genlist/item_compress/sentbubble/default";

    data.item: "banded_bg_area" "elm.swallow.bg";
    data.item: "texts" "info.time";
    data.item: "contents" "bubble.content info.thumbnail info.status info.status1 bubble.check";
    parts{
        spacer { "base"; scale; mouse;
            desc { "default";
                rel1.to_y: "info.pad";
                rel2.to_y: "pad.bottom";
                align: 0.0 0.0;
            }
        }
        swallow { "elm.swallow.bg"; scale;
            desc { "default";
            }
        }
        spacer { "info.pad"; scale;
            desc { "default";
                min: 0 BUBBLE_INFO_HEIGHT;
                max: -1 BUBBLE_INFO_HEIGHT;
                rel1.to_x: "pad.left";
                rel1.relative: 1.0 0.0;
                rel2.to_x: "pad.right";
                rel2.relative: 0.0 1.0;
                align: 0.0 0.0;
                fixed: 0 1;
            }
        }
        swallow { "info.thumbnail"; scale;
            desc { "default";
                min: BUBBLE_INFO_THUMB_WIDTH BUBBLE_INFO_THUMB_HEIGHT;
                max: BUBBLE_INFO_THUMB_WIDTH BUBBLE_INFO_THUMB_HEIGHT;
                align: 1.0 0.0;
                rel1.to_y: "info.pad";
                rel2.to_x: "info.pad";
                fixed: 1 1;
            }
        }
        spacer { "info.thumb.pad"; scale;
            desc { "default"
                min: BUBBLE_INFO_THUMB_PAD_WIDTH 0;
                max: BUBBLE_INFO_THUMB_PAD_WIDTH -1;
                align: 1.0 0.0;
                rel2.to_x: "info.thumbnail";
                rel2.relative: 0.0 1.0;
                fixed: 1 0;
            }
        }
        spacer { "info.pad.top"; scale;
            desc { "default"
                min: 0 BUBBLE_INFO_PAD_TOP_HEIGHT;
                max: -1 BUBBLE_INFO_PAD_TOP_HEIGHT;
                align: 0.0 0.0;
                rel1.to: "info.pad";
                fixed: 0 1;
            }
        }
        swallow { "info.status"; scale;
            desc { "default";
                min: BUBBLE_INFO_STATUS_WIDTH BUBBLE_INFO_STATUS_HEIGHT;
                max: BUBBLE_INFO_STATUS_WIDTH BUBBLE_INFO_STATUS_HEIGHT;
                align: 1.0 0.0;
                rel1.to_y: "info.pad.top";
                rel2.to_x: "info.thumb.pad";
                rel2.relative: 0.0 1.0;
                fixed: 1 1;
            }
        }
        spacer { "info.status.pad"; scale;
            desc { "default"
                min: BUBBLE_INFO_STATUS_PAD_WIDTH 0;
                max: BUBBLE_INFO_STATUS_PAD_WIDTH -1;
                align: 1.0 0.0;
                rel2.to_x: "info.status";
                rel2.relative: 0.0 1.0;
                fixed: 1 0;
            }
        }
        swallow { "info.status1"; scale;
            desc { "default";
                min: BUBBLE_INFO_STATUS_WIDTH BUBBLE_INFO_STATUS_HEIGHT;
                max: BUBBLE_INFO_STATUS_WIDTH BUBBLE_INFO_STATUS_HEIGHT;
                align: 1.0 0.0;
                rel1.to_y: "info.pad.top";
                rel2.to_x: "info.status.pad";
                rel2.relative: 0.0 1.0;
                fixed: 1 1;
            }
        }
        textblock { "info.time"; scale;
            desc { "default";
                align: 1.0 0.0;
                min: 0 BUBBLE_INFO_TEXT_HEIGHT;
                max: -1 BUBBLE_INFO_TEXT_HEIGHT;
                rel1.to_y: "info.status";
                rel1.relative: 0.0 1.0;
                rel2.to_x: "info.thumb.pad";
                rel2.relative: 0.0 1.0;
                text.style: "entry_bubble_sent_textblock_style";
            }
        }
        spacer { "pad.left"; scale;
            desc { "default";
                min: BUBBLE_PAD_LEFT_WIDTH 0;
                rel2.to_x: "bubble.pad.left";
                rel2.relative: 0.0 0.0;
                align: 0.0 0.0;
            }
        }
        spacer { "pad.right"; scale;
            desc { "default";
                min: BUBBLE_PAD_RIGHT_WIDTH 0;
                max: BUBBLE_PAD_RIGHT_WIDTH -1;
                align: 1.0 0.0;
                rel2.to_x: "bubble.check";
                rel2.relative: 0.0 1.0;
                fixed: 1 0;
            }
        }
        spacer { "pad.check"; scale;
            desc { "default";
                min: 0 0;
                max: 0 -1;
                align: 1.0 0.0;
                fixed: 1 0;
            }
            desc { "selection";
                inherit: "default";
                min: BUBBLE_PAD_CHECK_WIDTH 0;
                max: BUBBLE_PAD_CHECK_WIDTH -1;
            }
        }
        swallow { "bubble.check"; scale;
            desc { "default";
                min: 0 BUBBLE_CHECK_HEIGHT;
                max: 0 BUBBLE_CHECK_HEIGHT;
                align: 1.0 0.5;
                rel1.to_y: "bubble.bg.image";
                rel2.to_x: "pad.check";
                rel2.to_y: "bubble.bg.image";
                rel2.relative: 0.0 1.0;
            }
            desc { "selection";
                inherit: "default";
                min: BUBBLE_CHECK_WIDTH BUBBLE_CHECK_HEIGHT;
                max: BUBBLE_CHECK_WIDTH BUBBLE_CHECK_HEIGHT;
            }
        }
        image { "bubble.bg.image"; scale;
            desc { "default";
                image.normal: "messages_bubble_bg.#.png";
                rel1.to_x: "bubble.pad.left";
                rel1.to_y: "bubble.pad.top";
                rel2.to_x: "bubble.pad.right";
                rel2.to_y: "bubble.pad.bottom";
                min: BUBBLE_BG_IMAGE_MIN_WIDTH BUBBLE_BG_IMAGE_MIN_HEIGHT;
                color: BUBBLE_BG_COLOR;
            }
            desc { "pressed";
                inherit: "default";
                color: BUBBLE_BG_COLOR_PRESSED;
            }
        }
        image { "bubble.bg.effect"; scale;
            desc { "default";
                image.normal: "messages_bubble_bg_ef.#.png";
                rel1.to: "bubble.bg.image";
                rel2.to: "bubble.bg.image";
            }
        }
        spacer { "bubble.pad.top"; scale;
            desc { "default";
                min: 0 BUBBLE_CONTENT_PAD_TOP_HEIGHT;
                max: -1 BUBBLE_CONTENT_PAD_TOP_HEIGHT;
                rel1.to_y: "info.pad";
                rel1.relative: 0.0 1.0;
                align: 0.0 0.0;
                fixed: 0 1;
            }
        }
        spacer { "bubble.pad.left"; scale;
            desc { "default";
                min: BUBBLE_CONTENT_PAD_LEFT_WIDTH 0;
                max: BUBBLE_CONTENT_PAD_LEFT_WIDTH -1;
                rel2.to_x: "bubble.content";
                rel2.relative: 0.0 1.0;
                align: 1.0 0.0;
                fixed: 1 0;
            }
        }
        swallow { "bubble.content"; scale;
            desc { "default";
                max: BUBBLE_CONTENT_WIDTH_MAX -1;
                rel1.to_y: "bubble.pad.top";
                rel1.relative: 0.0 1.0;
                rel2.to_x: "bubble.pad.right";
                rel2.to_y: "bubble.pad.bottom";
                rel2.relative: 0.0 0.0;
                align: 1.0 0.0;
            }
        }
        spacer { "bubble.pad.right"; scale;
            desc { "default";
                min: BUBBLE_CONTENT_PAD_RIGHT_WIDTH 0;
                max: BUBBLE_CONTENT_PAD_RIGHT_WIDTH -1;
                rel2.to_x: "pad.right";
                rel2.relative: 0.0 0.0;
                align: 1.0 0.0;
                fixed: 1 0;
            }
        }
        spacer { "bubble.pad.bottom"; scale;
            desc { "default";
                min: 0 BUBBLE_CONTENT_PAD_BOTTOM_HEIGHT;
                max: -1 BUBBLE_CONTENT_PAD_BOTTOM_HEIGHT;
                rel2.to_y: "pad.bottom";
                rel2.relative: 1.0 0.0;
                align: 0.0 1.0;
                fixed: 0 1;
            }
        }
        spacer { "pad.bottom"; scale;
            desc { "default";
                min: 0 BUBBLE_PAD_BOTTOM_HEIGHT;
                max: -1 BUBBLE_PAD_BOTTOM_HEIGHT;
                rel1.relative: 0.0 1.0;
                align: 0.0 1.0;
                fixed: 0 1;
            }
        }
    }
    programs{
        program { name: "pressed";
            signal: "elm,state,selected";
            source: "elm";
            action: STATE_SET "pressed" 0.0;
            target: "bubble.bg.image";
        }
        program { name: "unpressed";
            signal: "elm,state,unselected";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "bubble.bg.image";
        }
        program { name: "selection_mode";
            signal: "elm,state,bubble.check,visible";
            source: "elm";
            action: STATE_SET "selection" 0.0;
            target: "bubble.check";
            target: "pad.check";
        }
        program { name: "default_mode";
            signal: "elm,state,default";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "bubble.check";
            target: "pad.check";
        }
    }
}

group { name: "elm/genlist/item/draft/default";
    alias: "elm/genlist/item_compress/draft/default";
    inherit: "elm/genlist/item/sentbubble/default";

    data.item: "contents" "bubble.content info.thumbnail info.status info.status1 bubble.check draft.button";

    parts {
        image { "bubble.bg.image"; scale;
            desc { "default";
                image.normal: "messages_bubble_line_draft.#.png";
                color: BUBBLE_BG_DRAFT_COLOR;
            }
            desc { "pressed";
                inherit: "default";
                color: BUBBLE_BG_DRAFT_COLOR_PRESSED;
            }
        }
        spacer { "bubble.pad.right"; scale;
            desc { "default";
                rel2.to_x: "draft.pad";
            }
        }
        spacer { "draft.pad"; scale;
            desc { "default";
                min: BUBBLE_DRAFT_PAD_WIDTH 0;
                max: BUBBLE_DRAFT_PAD_WIDTH -1;
                rel2.to_x: "pad.right";
                rel2.relative: 0.0 0.0;
                align: 1.0 0.0;
                fixed: 1 0;
            }
        }
        spacer { "draft.pad.button"; scale;
            desc { "default";
                min: BUBBLE_DRAFT_BUTTON_PAD_WIDTH BUBBLE_DRAFT_BUTTON_PAD_HEIGHT;
                max: BUBBLE_DRAFT_BUTTON_PAD_WIDTH BUBBLE_DRAFT_BUTTON_PAD_HEIGHT;
                rel1.to_x: "draft.pad";
                rel1.to_y: "bubble.pad.top";
                fixed: 1 1;
                align: 0.0 0.0;
            }
        }
        swallow { "draft.button"; scale;
            desc { "default";
                min: BUBBLE_DRAFT_BUTTON_WIDTH BUBBLE_DRAFT_BUTTON_HEIGHT;
                max: BUBBLE_DRAFT_BUTTON_WIDTH BUBBLE_DRAFT_BUTTON_HEIGHT;
                rel1.to: "draft.pad.button";
                rel1.relative: 1.0 1.0;
                align: 0.0 0.0;
            }
        }
    }
}

group { name: "elm/genlist/item/failed/default";
    alias: "elm/genlist/item_compress/failed/default";
    inherit: "elm/genlist/item/draft/default";
    part_remove: "draft.button";
    data.item: "contents" "bubble.content info.thumbnail info.status info.status1 bubble.check failed.button";
    
    parts {
        image { "bubble.bg.image"; scale;
            desc { "default";
                color: BUBBLE_BG_FAILED_COLOR;
            }
            desc { "pressed";
                inherit: "default";
                color: BUBBLE_BG_FAILED_COLOR_PRESSED;
            }
        }
        swallow { "failed.button"; scale;
            desc { "default";
                min: BUBBLE_FAILED_BUTTON_WIDTH BUBBLE_FAILED_BUTTON_HEIGHT;
                max: BUBBLE_FAILED_BUTTON_WIDTH BUBBLE_FAILED_BUTTON_HEIGHT;
                rel1.to: "draft.pad.button";
                rel1.relative: 1.0 1.0;
                align: 0.0 0.0;
            }
        }
    }
}

group { name: "elm/genlist/item/receivebubble/default";
   alias: "elm/genlist/item_compress/receivebubble/default";

   data.item: "banded_bg_area" "elm.swallow.bg";

   data.item: "texts" "elm.text elm.text.multiline";
   data.item: "contents" "elm.swallow.icon elm.swallow.icon.0 elm.swallow.icon.1 elm.swallow.icon.2 elm.swallow.end";

   script {
      public main_text_visible = 0;
      public multiline_text_visible = 0;
   }

   parts {
      swallow { "elm.swallow.bg"; scale;
         desc { "default";
         }
      }
      part { name: "bg";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 10;
         }
         description { state: "disabled" 0.0;
            color: 0 0 0 0;
         }
      }
      spacer { "base"; scale;
         desc { "default";
            min: 0 GENLIST_ITEM_MULTILINE_1LINE_HEIGHT_INC;
            align: 0.5 0.5;
         }
      }
      image { "image.bg"; scale;
         desc{ "default";
            image.normal: "messagebubble_bg_receive_bg.#.png";
            color: 169 63 54 255;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 1.0;
            rel2.offset: 0 -5;
         }
         desc{ "pressed";
            inherit: "default";
            color: 116 43 37 255;
         }
      }
      spacer { "elm.padding.left"; scale;
         desc { "default";
            min: GENLIST_ITEM_LR_PADDING_INC 0;
            align: 0.0 0.5;
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 1.0;
         }
      }
      spacer { "elm.padding.right"; scale;
         desc { "default";
            min: GENLIST_ITEM_LR_PADDING_INC 0;
            align: 1.0 0.5;
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 1.0;
         }
      }
      spacer { "elm.padding.top"; scale;
         desc { "default";
            min: 0 GENLIST_ITEM_TOP_PADDING_INC;
            max: -1 GENLIST_ITEM_TOP_PADDING_INC;
            align: 0.5 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 0.0;
         }
      }
      spacer { "elm.padding.bottom"; scale;
         desc { "default";
            min: 0 GENLIST_ITEM_BOTTOM_PADDING_INC;
            max: -1 GENLIST_ITEM_BOTTOM_PADDING_INC;
            align: 0.5 1.0;
            rel1.relative: 0.0 1.0;
            rel2.relative: 1.0 1.0;
         }
      }
      swallow { "elm.swallow.icon"; scale;
         desc { state: "default";
            align: 0.0 0.5;
            rel1 { to: "elm.padding.left"; relative: 1.0 0.5; }
            rel2 { to: "elm.padding.left"; relative: 1.0 0.5; }
         }
      }
      spacer { "elm.padding.B.A"; scale;
         desc { "default";
            min: 0 0;
            align: 0.0 0.5;
            rel1 { to: "elm.swallow.icon"; relative: 1.0 0.5; }
            rel2 { to: "elm.swallow.icon"; relative: 1.0 0.5; }
         }
         desc { "icon_visible"; inherit: "default";
            min: GENLIST_ITEM_TYPE_BA_PADDING_INC 0;
         }
      }
      swallow { "elm.swallow.end"; scale;
         desc { state: "default";
            align: 1.0 0.5;
            rel1 { to: "elm.padding.right"; relative: 0.0 0.5; }
            rel2 { to: "elm.padding.right"; relative: 0.0 0.5; }
         }
      }
      spacer { "elm.padding.D.C"; scale;
         desc { "default";
            min: 0 0;
            align: 1.0 0.5;
            rel1 { to: "elm.swallow.end"; relative: 0.0 0.5; }
            rel2 { to: "elm.swallow.end"; relative: 0.0 0.5; }
         }
         desc { "icon_visible"; inherit: "default";
            min: GENLIST_ITEM_TYPE_DC_PADDING_INC 0;
         }
      }
      swallow { "elm.swallow.icon.2"; scale;
         desc { state: "default";
            align: 1.0 0.5;
            rel1 { to: "elm.padding.D.C"; relative: 0.0 0.5; }
            rel2 { to: "elm.padding.D.C"; relative: 0.0 0.5; }
         }
      }
      spacer { "elm.padding.A.D"; scale;
         desc { "default";
            min: 0 0;
            align: 1.0 0.5;
            rel1 { to: "elm.swallow.icon.2"; relative: 0.0 0.5; }
            rel2 { to: "elm.swallow.icon.2"; relative: 0.0 0.5; }
         }
         desc { "icon_visible"; inherit: "default";
            min: GENLIST_ITEM_TYPE_AD_PADDING_INC 0;
         }
      }
      swallow { "elm.swallow.icon.0"; scale;
         desc { "default";
            align: 0.0 0.5;
            rel1 { to_x: "elm.padding.B.A"; to_y: "elm.padding.main.icon.text"; relative: 1.0 0.5; }
            rel2 { to_x: "elm.padding.B.A"; to_y: "elm.padding.main.icon.text"; relative: 1.0 0.5; }
         }
      }
      spacer { "elm.padding.main.icon.text"; scale;
         desc { "default";
            min: 0 0;
            align: 0.0 0.5;
            rel1 { to_x: "elm.swallow.icon.0"; relative: 1.0 0.5; }
            rel2 { to_x: "elm.swallow.icon.0"; relative: 1.0 0.5; }
         }
         desc { "icon_visible"; inherit: "default";
            min: GENLIST_ITEM_MAIN_LINE_TEXT_END_PADDING_INC 0;
         }
      }
      textblock { "elm.text"; scale;
         desc { "default";
            align: 0.5 0.0;
            rel1 { to_x: "elm.padding.main.icon.text"; to_y: "elm.padding.top"; relative: 1.0 1.0; }
            rel2 { to_x: "elm.padding.main.text.end"; to_y: "base_line"; relative: 0.0 0.0; }
            text.style: "entry_bubble_sent_textblock_style";
            text.min: 0 1;
         }
         desc { "pressed"; inherit: "default";
            text.style: "entry_bubble_sent_textblock_style";
         }
         desc { "disabled"; inherit: "default";
            text.style: "list_text_main_dim";
         }
      }
      spacer { "base_line";
         desc { "default";
            rel1 { to: "elm.padding.top"; relative: 0.0 0.0; }
            rel2 { to: "elm.padding.top"; relative: 1.0 0.0; }
         }
         desc { "main_text_visible";
            rel1 { to: "elm.padding.bottom"; relative: 0.0 0.0; }
            rel2 { to: "elm.padding.bottom"; relative: 1.0 0.0; }
         }
         desc { "multiline_text_visible";
            rel1 { to: "elm.text.multiline"; relative: 0.0 0.0; }
            rel2 { to: "elm.text.multiline"; relative: 1.0 0.0; }
         }
      }
      spacer { "elm.padding.main.text.end"; scale;
         desc { "default";
            min: 0 0;
            align: 1.0 0.5;
            rel1 { to_x: "elm.swallow.icon.1"; relative: 0.0 0.5; }
            rel2 { to_x: "elm.swallow.icon.1"; relative: 0.0 0.5; }
         }
         desc { "icon_visible"; inherit: "default";
            min: GENLIST_ITEM_MAIN_LINE_TEXT_END_PADDING_INC 0;
         }
      }
      swallow { "elm.swallow.icon.1"; scale;
         desc { "default";
            align: 1.0 0.5;
            rel1 { to_x: "elm.padding.A.D"; to_y: "elm.padding.main.text.end"; relative: 0.0 0.5; }
            rel2 { to_x: "elm.padding.A.D"; to_y: "elm.padding.main.text.end"; relative: 0.0 0.5; }
         }
      }
      spacer { "multiline_base_line";
         desc { "default";
            rel1 { to: "elm.padding.top"; relative: 0.0 1.0; }
            rel2 { to: "elm.padding.top"; relative: 1.0 1.0; }
         }
         desc { "main_text_visible";
            rel1 { to: "elm.padding.bottom"; relative: 0.0 0.0; }
            rel2 { to: "elm.padding.bottom"; relative: 1.0 0.0; }
         }
      }
      textblock { "elm.text.multiline"; scale;
         desc { "default";
            align: 0.5 1.0;
            rel1 { to_x: "elm.padding.main.icon.text"; to_y: "multiline_base_line"; relative: 1.0 1.0; }
            rel2 { to_x: "elm.padding.main.text.end"; to_y: "elm.padding.bottom"; relative: 0.0 0.0; }
            text.style: "entry_bubble_sent_textblock_style";
            text.min: 0 1;
         }
         desc { "pressed"; inherit: "default";
            text.style: "entry_bubble_sent_textblock_style";
         }
         desc { "disabled"; inherit: "default";
            text.style: "list_text_multiline_dim";
         }
      }
      rect { "elm.bottomline"; scale;
         desc { "default";
            min: 0 LIST_BOTTOMLINE_HEIGHT;
            max: -1  LIST_BOTTOMLINE_HEIGHT;
            align: 0.5 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 0.0;
            color: 204 204 204 255;
         }
         desc { "hidden"; inherit: "default";
            visible: 0;
         }
      }
   }
   programs {
      program {
         signal: "elm,state,elm.swallow.bg,visible";
         source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "elm.bottomline";
      }
      program {
         signal: "elm,state,elm.swallow.icon,visible";
         source: "elm";
         action: STATE_SET "icon_visible" 0.0;
         target: "elm.padding.B.A";
      }
      program {
         signal: "elm,state,elm.swallow.icon.2,visible";
         source: "elm";
         action: STATE_SET "icon_visible" 0.0;
         target: "elm.padding.A.D";
      }
      program {
         signal: "elm,state,elm.swallow.end,visible";
         source: "elm";
         action: STATE_SET "icon_visible" 0.0;
         target: "elm.padding.D.C";
      }
      program {
         signal: "elm,state,elm.swallow.icon.0,visible";
         source: "elm";
         action: STATE_SET "icon_visible" 0.0;
         target: "elm.padding.main.icon.text";
      }
      program {
         signal: "elm,state,elm.swallow.icon.1,visible";
         source: "elm";
         action: STATE_SET "icon_visible" 0.0;
         target: "elm.padding.main.text.end";
      }
      program { name: "main_text_visible";
         signal: "elm,state,elm.text,visible";
         source: "elm";
         script {
            if (get_int(multiline_text_visible) == 1) {
               set_state(PART:"base_line", "multiline_text_visible", 0.0);
               set_state(PART:"multiline_base_line", "main_text_visible", 0.0);
            }
            else {
               set_state(PART:"base_line", "main_text_visible", 0.0);
               set_state(PART:"multiline_base_line", "default", 0.0);
            }
            set_int(main_text_visible, 1);
         }
      }
      program { name: "multiline_text_visible";
         signal: "elm,state,elm.text.multiline,visible";
         source: "elm";
          script {
            if (get_int(main_text_visible) == 1) {
               set_state(PART:"base_line", "multiline_text_visible", 0.0);
               set_state(PART:"multiline_base_line", "main_text_visible", 0.0);
            }
            else {
               set_state(PART:"base_line", "main_text_visible", 0.0);
               set_state(PART:"multiline_base_line", "default", 0.0);
            }
            set_int(multiline_text_visible, 1);
         }
      }
      program { name: "default";
         signal: "elm,state,default";
         source: "elm";
         script {
            set_state(PART:"base_line", "default", 0.0);
            set_state(PART:"multiline_base_line", "default", 0.0);
            set_state(PART:"elm.padding.B.A", "default", 0.0);
            set_state(PART:"elm.padding.A.D", "default", 0.0);
            set_state(PART:"elm.padding.D.C", "default", 0.0);
            set_state(PART:"elm.padding.main.icon.text", "default", 0.0);
            set_state(PART:"elm.padding.main.text.end", "default", 0.0);
            set_state(PART:"elm.bottomline", "default", 0.0);
            set_state(PART:"bg", "default", 0.0);
            set_state(PART:"elm.text", "default", 0.0);
            set_state(PART:"elm.text.multiline", "default", 0.0);
            set_int(main_text_visible, 0);
            set_int(multiline_text_visible, 0);
         }
      }
      program { name: "pressed";
         signal: "elm,state,selected";
         source: "elm";
         action: STATE_SET "pressed" 0.0;
         target: "bg";
         target: "elm.text";
         target: "elm.text.multiline";
         target: "image.bg";
      }
      program { name: "unpressed";
         signal: "elm,state,unselected";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "bg";
         target: "elm.text";
         target: "elm.text.multiline";
         target: "image.bg";
      }
      program { name: "enabled";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "bg";
         target: "elm.text";
         target: "elm.text.multiline";
      }
      program { name: "disabled";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "bg";
         target: "elm.text";
         target: "elm.text.multiline";
      }
   }
}

}